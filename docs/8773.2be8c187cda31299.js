"use strict";var Pt=Object.defineProperty,it=Object.getOwnPropertySymbols,jt=Object.prototype.hasOwnProperty,Zt=Object.prototype.propertyIsEnumerable,rt=(K,w,f)=>w in K?Pt(K,w,{enumerable:!0,configurable:!0,writable:!0,value:f}):K[w]=f,We=(K,w)=>{for(var f in w||(w={}))jt.call(w,f)&&rt(K,f,w[f]);if(it)for(var f of it(w))Zt.call(w,f)&&rt(K,f,w[f]);return K};(self.webpackChunksite=self.webpackChunksite||[]).push([[8773],{14658:(K,w,f)=>{function j(){return new Float32Array(3)}function Z(y,V,Q){const S=new Float32Array(3);return S[0]=y,S[1]=V,S[2]=Q,S}function k(){return j()}function q(){return Z(1,1,1)}function F(){return Z(1,0,0)}function D(){return Z(0,1,0)}function O(){return Z(0,0,1)}f.d(w,{c:()=>j,f:()=>Z});const Ge=k(),Ue=q(),ee=F(),ue=D(),I=O();Object.freeze({__proto__:null,create:j,clone:function T(y){const V=new Float32Array(3);return V[0]=y[0],V[1]=y[1],V[2]=y[2],V},fromValues:Z,createView:function ce(y,V){return new Float32Array(y,V,3)},zeros:k,ones:q,unitX:F,unitY:D,unitZ:O,ZEROS:Ge,ONES:Ue,UNIT_X:ee,UNIT_Y:ue,UNIT_Z:I})},55051:(K,w,f)=>{f.d(w,{Z:()=>S});var j=f(30994),T=f(30217),Z=f(49966),ce=f(9545),k=f(14658),q=f(62825),F=f(83994),O=(f(85775),f(92118)),ee=(f(67969),f(55086),f(49353)),ue=f(57477),I=f(64288);const be=Math.PI/180;class V extends ue.s{constructor(x){super(),this._dvsMat3=(0,Z.c)(),this._localOrigin={x:0,y:0},this._getBounds=x}destroy(){this._vao&&(this._vao.dispose(!0),this._vao=null,this._vertexBuffer=null,this._indexBuffer=null),this._program&&(this._program.dispose(),this._program=null)}doRender(x){const{context:v}=x,B=this._getBounds();if(B.length<1)return;this._createShaderProgram(v),this._updateMatricesAndLocalOrigin(x),this._updateBufferData(v,B),v.setBlendingEnabled(!0),v.setDepthTestEnabled(!1),v.setStencilWriteMask(0),v.setStencilTestEnabled(!1),v.setBlendFunction(1,771),v.setColorMask(!0,!0,!0,!0);const G=this._program;v.bindVAO(this._vao),v.useProgram(G),G.setUniformMatrix3fv("u_dvsMat3",this._dvsMat3),v.gl.lineWidth(1),v.drawElements(1,8*B.length,5125,0),v.bindVAO()}_createTransforms(){return{dvs:(0,Z.c)()}}_createShaderProgram(x){this._program||(this._program=new O.$(x,"precision highp float;\n        uniform mat3 u_dvsMat3;\n\n        attribute vec2 a_position;\n\n        void main() {\n          mediump vec3 pos = u_dvsMat3 * vec3(a_position, 1.0);\n          gl_Position = vec4(pos.xy, 0.0, 1.0);\n        }","precision mediump float;\n      void main() {\n        gl_FragColor = vec4(0.75, 0.0, 0.0, 0.75);\n      }",Q().attributes))}_updateMatricesAndLocalOrigin(x){const{state:v}=x,{displayMat3:B,size:G,resolution:se,pixelRatio:L,rotation:R,viewpoint:_}=v,P=be*R,{x:A,y:De}=_.targetGeometry,fe=(0,q.or)(A,v.spatialReference);this._localOrigin.x=fe,this._localOrigin.y=De;const ie=L*G[0],me=L*G[1],g=se*ie,Ce=se*me,E=(0,T.b)(this._dvsMat3);(0,T.m)(E,E,B),(0,T.c)(E,E,(0,ce.f)(ie/2,me/2)),(0,T.d)(E,E,(0,k.f)(G[0]/g,-me/Ce,1)),(0,T.r)(E,E,-P)}_updateBufferData(x,v){const{x:B,y:G}=this._localOrigin,L=new Float32Array(8*v.length),R=new Uint32Array(8*v.length);let _=0,P=0;for(const A of v)A&&(L[2*_+0]=A[0]-B,L[2*_+1]=A[1]-G,L[2*_+2]=A[0]-B,L[2*_+3]=A[3]-G,L[2*_+4]=A[2]-B,L[2*_+5]=A[3]-G,L[2*_+6]=A[2]-B,L[2*_+7]=A[1]-G,R[P+0]=_+0,R[P+1]=_+3,R[P+2]=_+3,R[P+3]=_+2,R[P+4]=_+2,R[P+5]=_+1,R[P+6]=_+1,R[P+7]=_+0,_+=4,P+=8);if(this._vertexBuffer?this._vertexBuffer.setData(L.buffer):this._vertexBuffer=F.Z.createVertex(x,35048,L.buffer),this._indexBuffer?this._indexBuffer.setData(R):this._indexBuffer=F.Z.createIndex(x,35048,R),!this._vao){const A=Q();this._vao=new ee.Z(x,A.attributes,A.bufferLayouts,{geometry:this._vertexBuffer},this._indexBuffer)}}}const Q=()=>(0,I.cM)("bounds",{geometry:[{location:0,name:"a_position",count:2,type:5126}]});class S extends j.T{constructor(x){super(x),this.hasHighlight=()=>!0}destroy(){super.destroy(),this._boundsRenderer&&(this._boundsRenderer.destroy(),this._boundsRenderer=null)}enableRenderingBounds(x){this._boundsRenderer=new V(x),this.requestRender()}get hasLabels(){return!1}onTileData(x,v){x.patch(v),this.contains(x)||this.addChild(x),this.requestRender()}onTileError(x){x.clear(),this.contains(x)||this.addChild(x)}_renderChildren(x,v){for(const B of this.children)B.isReady&&B.hasData&&(B.commit(x),x.context.setStencilFunction(514,B.stencilRef,255),B._displayList.replay(x,B,v))}}},97291:(K,w,f)=>{f.d(w,{Z:()=>Vt});var j=f(15861),T=f(17626),Z=f(14517),ce=f(986),k=f(80542),q=f(8314),F=f(62208),D=f(10699),O=f(77712),ee=(f(85931),f(90912),f(76898)),ue=f(65234),I=f(65401),be=f(25748),y=f(91179),V=f(32442),Q=f(11519),S=f(74618),te=f(37053);function G(o,e,t){if(Array.isArray(o)){const s=o[0];if(s>e){const i=(0,S.XZ)(s,e);o[0]=s+i*(-2*e)}else if(s<t){const i=(0,S.XZ)(s,t);o[0]=s+i*(-2*t)}}else{const s=o.x;if(s>e){const i=(0,S.XZ)(s,e);o.x+=i*(-2*e)}else if(s<t){const i=(0,S.XZ)(s,t);o.x+=i*(-2*t)}}return o}function L(o,e){const[t,s]=e.valid,i=2*s;let r,n=0;return o>s?(r=Math.ceil(Math.abs(o-s)/i),o-=r*i,n=r):o<t&&(r=Math.ceil(Math.abs(o-t)/i),o+=r*i,n=-r),{x:o,frameId:n}}function R(o,e){const{xmin:t,ymin:s,xmax:i,ymax:r}=e;return _(o,t,s)&&_(o,t,r)&&_(o,i,r)&&_(o,i,s)}function _(o,e,t){return e>=o.xmin&&e<=o.xmax&&t>=o.ymin&&t<=o.ymax}class P{cut(e,t){let s;if(e.rings)this.closed=!0,s=e.rings,this.minPts=4;else{if(!e.paths)return null;this.closed=!1,s=e.paths,this.minPts=2}const i=s.length,r=-2*t;for(let n=0;n<i;n++){const a=s[n];if(a&&a.length>=this.minPts){const d=[];for(const h of a)d.push([h[0]+r,h[1]]);s.push(d)}}return this.closed?e.rings=s:e.paths=s,e}}const A=(0,I.Ue)();var De=f(82959),fe=f(35909),ie=f(8080),me=f(39351);const g=-1;class Ce{constructor(){this._dirties=[{vertexFrom:g,vertexCount:g,indexFrom:g,indexCount:g,allDirty:!1},{vertexFrom:g,vertexCount:g,indexFrom:g,indexCount:g,allDirty:!1},{vertexFrom:g,vertexCount:g,indexFrom:g,indexCount:g,allDirty:!1},{vertexFrom:g,vertexCount:g,indexFrom:g,indexCount:g,allDirty:!1},{vertexFrom:g,vertexCount:g,indexFrom:g,indexCount:g,allDirty:!1}]}hasDirty(){return this._dirties.some(e=>e.indexCount!==g||e.allDirty)}markAllClean(){for(const e of this._dirties)e.indexFrom=g,e.indexCount=g,e.vertexFrom=g,e.vertexCount=g,e.allDirty=!1}markAllDirty(){for(const e of this._dirties)e.allDirty=!0}forEach(e){for(let t=0;t<this._dirties.length;++t){const{indexCount:s,indexFrom:i,vertexCount:r,vertexFrom:n,allDirty:a}=this._dirties[t],d={};let h,c=!1;(a||n!==g&&r>0)&&(d.geometry={count:r,from:n,allDirty:a},c=!0),(a||i!==g&&s>0)&&(h={count:s,from:i,allDirty:a},c=!0),c&&e({indices:h,vertices:d},t)}}markDirtyIndices(e,t,s){const i=this._dirties[e],r=t,n=s;if(!i.allDirty)if(i.indexCount!==g){const a=Math.min(i.indexFrom,r),d=Math.max(i.indexFrom+i.indexCount,r+n)-a;i.indexFrom=a,i.indexCount=d}else i.indexFrom=r,i.indexCount=n}markDirtyVertices(e,t,s,i){const r=this._dirties[e],n=s,a=i;if(!r.allDirty)if(r.vertexCount!==g){const d=Math.min(r.vertexFrom,n),h=Math.max(r.vertexFrom+r.vertexCount,n+a)-d;r.vertexFrom=d,r.vertexCount=h}else r.vertexFrom=n,r.vertexCount=a}}class E{constructor(e){this._largestRange=null,this._parent=e,this._updateLargestRange()}get largestRange(){return this._largestRange}rangeCreated(e){(!this._largestRange||e.count>this._largestRange.count)&&(this._largestRange=e)}rangeResized(e,t){e===this._largestRange?e.count<t&&this._updateLargestRange():(!this._largestRange||e.count>this._largestRange.count)&&(this._largestRange=e)}findBestRange(e){let t=this._parent._freeHead,s=null;for(;null!==t;)t.count>=e&&(!s||t.count-e<s.count-e)&&(s=t),t=t.next;return s}findAdjacentRanges(e,t){let s=!0,i=!1,r=null,n=this._parent._freeHead;for(;s&&!i;){const d=null!==n?n.from:this._parent._size;e>=(null!==r?r.from+r.count:0)&&e+t<=d?(s=!1,i=!0):null!==n?(r=n,n=n.next):s=!1}return[r,n]}_updateLargestRange(){let e=null,t=this._parent._freeHead;for(;null!==t;)(!e||t.count>e.count)&&(e=t),t=t.next;this._largestRange=e}}class H{constructor(e,t){this._allocated=0,this._size=e,this._freeHead=e>0?{from:0,count:e,prev:null,next:null}:null,this._bookKeeper=t||new E(this),this._freeHead&&this._bookKeeper.rangeCreated(this._freeHead)}allocate(e){const t=this._bookKeeper.findBestRange(e);if(null===t)return-1;const s=t.from,i=t.count;if(t.from+=e,t.count-=e,this._bookKeeper.rangeResized(t,s,i),this._allocated+=e,0===t.count){const r=null!==t.prev?this._freeHead:t.next;H._removeRange(t),this._freeHead=r}return s}free(e,t){const[s,i]=this._bookKeeper.findAdjacentRanges(e,t),r={from:e,count:t,prev:s,next:i};if(null!==s&&(s.next=r),null!==i&&(i.prev=r),this._bookKeeper.rangeCreated(r),this._allocated-=t,null!==i&&r.from+r.count===i.from){const n=r.from,a=r.count;H._fuse(r,i),H._removeRange(i),this._bookKeeper.rangeResized(r,n,a),this._bookKeeper.rangeResized(i,void 0,0)}if(null!==s&&s.from+s.count===r.from){const n=s.from,a=s.count;H._fuse(s,r),H._removeRange(r),this._bookKeeper.rangeResized(s,n,a),this._bookKeeper.rangeResized(r,void 0,0)}this._freeHead=null!==r.prev?this._freeHead:r}get fragmentation(){const e=this._size-this._allocated;return 0===e?0:1-this._bookKeeper.largestRange.count/e}static _removeRange(e){null!==e.prev?null!==e.next?(e.prev.next=e.next,e.next.prev=e.prev):e.prev.next=null:null!==e.next&&(e.next.prev=null)}static _fuse(e,t){e.count+=t.count,e.next=t.next,t.from+=t.count,t.count=0,null!==t.next&&(t.next.prev=e)}}var M=f(64288);const pe=["FILL","LINE","MARKER","TEXT","LABEL"];class Be{constructor(e,t,s,i){this._strides=e,this._displayList=t,this._freeListsAndStorage={},this._dirtyMap=null,this._dirtyMap=s;for(const r in e){this._freeListsAndStorage[r]={vtxFreeList:i?new H(i):null,idxFreeList:i?new H(i):null,vertexBuffers:{},indexBuffer:i?new Uint32Array(i):null};for(const n in e[r])this._freeListsAndStorage[r].vertexBuffers[n]={data:i?(0,M.C$)(i,e[r][n]):null,stride:e[r][n]}}}static fromTileData(e,t){const s=function nt(o){const e=o.getStrides(),t={};for(let s=0;s<e.length;s++)t[pe[s]]=e[s];return t}(e),i=[0,0,0,0,0],r=[0,0,0,0,0],n=e.tileDisplayData.displayObjects;for(const d of n)for(const h of d.displayRecords)i[h.geometryType]=Math.max(i[h.geometryType],h.vertexFrom+h.vertexCount),r[h.geometryType]=Math.max(r[h.geometryType],h.indexFrom+h.indexCount);const a=new Be(s,e.tileDisplayData.displayList,t,null);for(let d=0;d<e.tileBufferData.geometries.length;++d){const h=i[d],c=r[d],l=e.tileBufferData.geometries[d],m=a._storageFor(pe[d]),p=e.tileBufferData.geometries[d].indexBuffer;let b;m.indexBuffer=p,m.idxFreeList=new H(p.length),m.idxFreeList.allocate(c);for(const z in l.vertexBuffer){const U=e.tileBufferData.geometries[d].vertexBuffer[z];m.vertexBuffers[z].data=U.data,m.vertexBuffers[z].stride=U.stride;const $=(0,M.Y8)(U.stride),J=U.data.length*$/U.stride;b||(b=J)}m.vtxFreeList=new H(b),m.vtxFreeList.allocate(h)}return a}delete(e){const t=pe[e.geometryType];this._freeVertices(t,e.vertexFrom,e.vertexCount),this._freeIndices(t,e.indexFrom,e.indexCount),this._displayList.removeFromList(e),e.vertexFrom=void 0,e.indexFrom=void 0}setMeshData(e,t,s,i,r){const n=pe[e.geometryType];let a,d;e.meshData=null,void 0===e.vertexFrom?(d=t.vertexCount,a=this._allocateVertices(n,d)):t.vertexCount>e.vertexCount?(this._freeVertices(n,e.vertexFrom,e.vertexCount),d=t.vertexCount,a=this._allocateVertices(n,d)):t.vertexCount===e.vertexCount?(a=e.vertexFrom,d=e.vertexCount):(this._freeVertices(n,e.vertexFrom+t.vertexCount,e.vertexCount-t.vertexCount),a=e.vertexFrom,d=t.vertexCount);let h,c,l,u=!0;if(void 0===e.indexFrom?(h=r,l=t.indexCount,c=this._allocateIndices(n,l)):t.indexCount>e.indexCount?(h=this._displayList.removeFromList(e),this._freeIndices(n,e.indexFrom,e.indexCount),l=t.indexCount,c=this._allocateIndices(n,l)):t.indexCount===e.indexCount?(u=!1,c=e.indexFrom,l=e.indexCount):(h=this._displayList.removeFromList(e),this._freeIndices(n,e.indexFrom+t.indexCount,e.indexCount-t.indexCount),c=e.indexFrom,l=t.indexCount),-1!==a&&-1!==c){const m=this._storageFor(n);if((0,M.wO)(a,c,m.vertexBuffers,m.indexBuffer,t,s,i),e.vertexFrom=a,e.indexFrom=c,e.vertexCount=t.vertexCount,e.indexCount=t.indexCount,this._dirtyMap){this._dirtyMap.markDirtyIndices(e.geometryType,e.indexFrom,e.indexCount);for(const p in s)this._dirtyMap.markDirtyVertices(e.geometryType,p,e.vertexFrom,e.vertexCount)}return u&&this._displayList.addToList(e,h),!0}return-1!==a&&this._freeVertices(n,a,d),-1!==c&&this._freeIndices(n,c,l),e.setMeshDataFromBuffers(t,s,i),e.vertexFrom=void 0,e.vertexCount=0,e.indexFrom=void 0,e.indexCount=0,!1}tryAddMeshData(e,t){const s=t.vertexBuffer,i=t.indexBuffer,r=pe[e.geometryType],n=this._allocateVertices(r,e.vertexCount);if(-1===n)return this._freeVertices(r,n,e.vertexCount),!1;const a=this._allocateIndices(r,e.indexCount);if(-1===a)return this._freeVertices(r,n,e.vertexCount),this._freeIndices(r,a,e.indexCount),!1;const d=this._storageFor(r);if((0,M.wO)(n,a,d.vertexBuffers,d.indexBuffer,e,s,i),e.vertexFrom=n,e.indexFrom=a,this._dirtyMap){this._dirtyMap.markDirtyIndices(e.geometryType,e.indexFrom,e.indexCount);for(const h in s)this._dirtyMap.markDirtyVertices(e.geometryType,h,n,e.vertexCount)}return this._displayList.addToList(e),!0}_allocateVertices(e,t){const s=this._storageFor(e),i=s.vtxFreeList.allocate(t);return-1===i||s.vtxFreeList.fragmentation>.5?-1:i}_freeVertices(e,t,s){this._storageFor(e).vtxFreeList.free(t,s)}_freeIndices(e,t,s){this._storageFor(e).idxFreeList.free(t,s)}_allocateIndices(e,t){const s=this._storageFor(e),i=s.idxFreeList.allocate(t);return-1===i||s.idxFreeList.fragmentation>.5?-1:i}_storageFor(e){return this._freeListsAndStorage[e]}_stridesFor(e,t){return this._strides[e][t]}}var Xe=f(83994),ot=(f(85775),f(81653),f(67969),f(20194),f(55086),f(49353));class at{constructor(e){this.geometryMap=(0,M.Mk)(()=>({indexBuffer:Xe.Z.createIndex(e,35044),vao:null}),(t,s)=>({vertexBuffer:Xe.Z.createVertex(e,M.mR[s])}))}dispose(){for(let e=0;e<5;e++){const t=this.geometryMap[e];if(t){t.data.vao&&t.data.vao.dispose(!1),t.data.indexBuffer&&t.data.indexBuffer.dispose();for(const s in t.buffers)t.buffers[s]&&t.buffers[s].data.vertexBuffer.dispose()}}}get(e){const t=this.geometryMap[e];return{draw(s,i,r,n,a){if(!t.data.vao){const h={};for(const c in t.buffers)h[c]=t.buffers[c].data.vertexBuffer;t.data.vao=new ot.Z(s,r,i,h,t.data.indexBuffer)}s.bindVAO(t.data.vao),s.drawElements(4,a,5125,Uint32Array.BYTES_PER_ELEMENT*n),s.bindVAO(null)}}}has(e){return null!=this.geometryMap[e]}upload(e,t){t.forEach((s,i)=>{this._upload(s,i,e)})}_upload(e,t,s){if(e.indices&&(e.indices.allDirty?this._uploadIndices(s,t):null!=e.indices.from&&null!=e.indices.count&&this._uploadIndices(s,t,e.indices.from,e.indices.count)),e.vertices){const i=e.vertices;for(const r in i){const n=i[r];n.allDirty?this._uploadVertices(s,t,r):null!=n.from&&null!=n.count&&this._uploadVertices(s,t,r,n.from,n.count)}}}_uploadVertices(e,t,s,i,r){const n=this.geometryMap[t];if(!n)return;const a=e.geometries[t].vertexBuffer[s];if(!a)return;const d=a.stride,h=a.data.buffer;n.buffers[s]&&h.byteLength>0&&(null!=i&&null!=r?n.buffers[s].data.vertexBuffer.setSubData(h,i*d,i*d,(i+r)*d):n.buffers[s].data.vertexBuffer.setData(h))}_uploadIndices(e,t,s,i){const r=this.geometryMap[t];if(!r)return;const a=e.geometries[t].indexBuffer.buffer;r.data.indexBuffer&&a.byteLength>0&&(null!=s&&null!=i?r.data.indexBuffer.setSubData(a,4*s,4*s,4*(s+i)):r.data.indexBuffer.setData(a))}}var lt=f(29443);class dt extends lt.o{constructor(){super(...arguments),this._data=null,this._displayList=null,this._lastCommitTime=0,this._hasData=!1,this._invalidated=!1,this._wglBuffers=null,this._dirtyMap=new Ce}destroy(){super.destroy(),this.clear()}get hasData(){return!!this._hasData}get displayObjects(){var e;return null!=(e=this._displayObjects)?e:[]}getGeometry(e){return this._wglBuffers&&this._wglBuffers.has(e)?this._wglBuffers.get(e):null}getDisplayList(){return this._displayList}patch(e){if(!0===e.clear)return this.clear(),void(this._hasData=!1);const t=e.addOrUpdate,s=e.remove;!this._data&&t&&t.tileDisplayData.displayObjects.length?(t.tileDisplayData.computeDisplayList(),this._dirtyMap=new Ce,this._dispRecStore=Be.fromTileData(t,this._dirtyMap),this._data=t,this._dirtyMap.markAllDirty(),this._hasData=!0,e.end&&this.ready()):this._data&&(t&&t.tileDisplayData.displayObjects.length||s.length)?this._doPatchData(e):e.end&&this.ready(),e.end&&!this._data&&this.clear(),this.requestRender(),this.emit("change")}commit(e){e.time&&e.time===this._lastCommitTime||(this._lastCommitTime=e.time,this.visible&&this._data&&(this._wglBuffers||(this._wglBuffers=new at(e.context)),(this._dirtyMap.hasDirty()||this._invalidated)&&(this._invalidated=!1,this._wglBuffers.upload(this._data.tileBufferData,this._dirtyMap),this._displayList=this._data.tileDisplayData.displayList.clone(),this._displayObjects=this._data.tileDisplayData.displayObjects.slice(),this._dirtyMap.markAllClean())))}clear(){this._data=null,this._displayList=null,this._dispRecStore=null,this._wglBuffers&&(this._wglBuffers.dispose(),this._wglBuffers=null)}_doPatchData(e){this._invalidated=!0,this._patchData(e)||(this._dirtyMap.markAllDirty(),this._data.reshuffle(),this._dispRecStore=Be.fromTileData(this._data,this._dirtyMap)),this.requestRender()}_patchData(e){let t=!0;const s=e.addOrUpdate&&e.addOrUpdate.tileDisplayData&&e.addOrUpdate.tileDisplayData.displayObjects||[],i=(e.remove||[]).slice();for(const r of s)null!=r.insertAfter&&i.push(r.id);for(const r of i){const n=this._data.tileDisplayData.displayObjectRegistry.get(r);if(n){this._data.tileDisplayData.displayList.removeFromList(n.displayRecords);for(const d of n.displayRecords)this._dispRecStore.delete(d);this._data.tileDisplayData.displayObjectRegistry.delete(r);const a=this._data.tileDisplayData.displayObjects.indexOf(n);this._data.tileDisplayData.displayObjects.splice(a,1)}}for(const r of s){let n,a=this._data.tileDisplayData.displayObjectRegistry.get(r.id);if(a){const h=a.displayRecords;a.set(r),a.displayRecords=h;const c=a.displayRecords.length;for(let l=0;l<c;++l){const u=a.displayRecords[l],m=r.displayRecords[l];(l>=r.displayRecords.length||u.geometryType!==m.geometryType||u.symbolLevel!==m.symbolLevel||u.zOrder!==m.zOrder||u.materialKey!==m.materialKey)&&(this._dispRecStore.delete(a.displayRecords[l]),l<r.displayRecords.length&&(a.displayRecords[l]=void 0))}a.displayRecords.length=r.displayRecords.length}else{let h;a=r.copy(),a.displayRecords=[],this._data.tileDisplayData.displayObjectRegistry.set(r.id,a);const c=this._data.tileDisplayData.displayObjects;if(null!=a.insertAfter)if(n={},a.insertAfter>=0){const l=this._data.tileDisplayData.displayObjectRegistry.get(a.insertAfter);l?(h=c.indexOf(l)+1,h<c.length?c.splice(h,0,a):(c.push(a),h=c.length)):(c.push(a),h=c.length)}else c.unshift(a),h=0;else c.push(a),h=c.length;if(n){const l=r.displayRecords.length>0?1:0;let u=0;for(let m=h-1;m>=0&&u<l;--m)for(let p=c[m].displayRecords.length-1;p>=0&&u<l;--p){const b=c[m].displayRecords[p],z=this._data.tileDisplayData.displayList.getDPInfoType();n[z]||(n[z]=b,++u)}}}const d=r.displayRecords.length;for(let h=0;h<d;++h){const c=r.displayRecords[h];let l=a.displayRecords[h];l?(l.meshData=c.meshData,l.materialKey=c.materialKey):(l=c.copy(),l.vertexFrom=void 0,l.indexFrom=void 0,a.displayRecords[h]=l);const u=c.geometryType,m=this._data.tileDisplayData.displayList.getDPInfoType(),p=e.addOrUpdate.tileBufferData.geometries[u],b=p.vertexBuffer,z=p.indexBuffer;let U;n&&(U=n[m]?this._data.tileDisplayData.displayList.splitAfter(n[m]):-1),t=this._dispRecStore.setMeshData(l,c,b,z,U)&&t,n&&null!=l.indexFrom&&null!=l.indexFrom&&(n[m]=l)}}return t}}class Ye{constructor(){this._byGeometryType=null}get satisfied(){return!this._byGeometryType}reset(){this._byGeometryType=null}verticesFor(e){return this._byGeometryType?this._byGeometryType[e].vertices:0}indicesFor(e){return this._byGeometryType?this._byGeometryType[e].indices:0}needMore(e,t,s){if(!t&&!s)return;this._byGeometryType||(this._byGeometryType=[{vertices:0,indices:0},{vertices:0,indices:0},{vertices:0,indices:0},{vertices:0,indices:0},{vertices:0,indices:0}]);const i=this._byGeometryType[e];i.vertices+=t,i.indices+=s}}class re{constructor(){this.geometries=[{indexBuffer:void 0,vertexBuffer:{}},{indexBuffer:void 0,vertexBuffer:{}},{indexBuffer:void 0,vertexBuffer:{}},{indexBuffer:void 0,vertexBuffer:{}},{indexBuffer:void 0,vertexBuffer:{}}]}clone(){const e=new re;for(let t=0;t<this.geometries.length;t++){const s=this.geometries[t],i=e.geometries[t];i.indexBuffer=s.indexBuffer.slice(),i.vertexBuffer={};for(const r in s.vertexBuffer){const{data:n,stride:a}=s.vertexBuffer[r];i.vertexBuffer[r]={data:n.slice(),stride:a}}}return e}static deserialize(e){const t=new re;for(let s=0;s<5;++s){t.geometries[s].indexBuffer=new Uint32Array(e.geometries[s].indexBuffer),t.geometries[s].vertexBuffer={};for(const i in e.geometries[s].vertexBuffer)t.geometries[s].vertexBuffer[i]={data:(0,M.e2)(e.geometries[s].vertexBuffer[i].data,e.geometries[s].vertexBuffer[i].stride),stride:e.geometries[s].vertexBuffer[i].stride}}return t}serialize(){const e={geometries:[{indexBuffer:this.geometries[0].indexBuffer.buffer,vertexBuffer:{}},{indexBuffer:this.geometries[1].indexBuffer.buffer,vertexBuffer:{}},{indexBuffer:this.geometries[2].indexBuffer.buffer,vertexBuffer:{}},{indexBuffer:this.geometries[3].indexBuffer.buffer,vertexBuffer:{}},{indexBuffer:this.geometries[4].indexBuffer.buffer,vertexBuffer:{}}]};for(let t=0;t<5;++t)for(const s in this.geometries[t].vertexBuffer)e.geometries[t].vertexBuffer[s]={data:this.geometries[t].vertexBuffer[s].data.buffer,stride:this.geometries[t].vertexBuffer[s].stride};return e}getBuffers(){const e=[];for(let t=0;t<5;++t){e.push(this.geometries[t].indexBuffer.buffer);for(const s in this.geometries[t].vertexBuffer)e.push(this.geometries[t].vertexBuffer[s].data.buffer)}return e}}var N=f(39406);function Te(o,e,t,...s){e<o.length?o.splice(e,t,...s):o.push(...s)}const Pe=new Map;Pe.set(N.jx.MAP,[N.LW.FILL,N.LW.LINE,N.LW.MARKER,N.LW.TEXT]),Pe.set(N.jx.LABEL,[N.LW.LABEL]),Pe.set(N.jx.LABEL_ALPHA,[N.LW.LABEL]);class je{constructor(){this.symbolLevels=[]}replay(e,t,s){for(const i of this.symbolLevels)for(const r of i.zLevels){const n=r.geometryDPInfo.unified;if(n)for(const a of n){const d=e.painter.getGeometryBrush(a.geometryType),h=t.getGeometry(a.geometryType),c={geometryType:a.geometryType,materialKey:a.materialKey,indexFrom:a.indexFrom,indexCount:a.indexCount,draw:(l,u,m)=>{h.draw(l,u,m,a.indexFrom,a.indexCount)}};d.prepareState(e,t),d.drawGeometry(e,t,c,s)}}}get empty(){return!this.symbolLevels||0===this.symbolLevels.length}clear(){this.symbolLevels.length=0}addToList(e,t){if(Array.isArray(e))for(const s of e)this._addToList(s,t);else this._addToList(e,t)}removeFromList(e){Array.isArray(e)||(e=[e]);let t=null;for(const s of e)t=this._removeFromList(s);return t}clone(){const e=new je;for(const t of this.symbolLevels)e.symbolLevels.push(t.clone());return e}splitAfter(e){const t=this._getDisplayList(e.symbolLevel,e.zOrder),s=t.length,i=e.indexFrom+e.indexCount;for(let r=0;r<s;++r){const n=t[r];if(n.geometryType===e.geometryType&&i>n.indexFrom&&i<=n.indexFrom+n.indexCount){if(i<n.indexFrom+n.indexCount){const a=new ye;a.geometryType=n.geometryType,a.materialKey=n.materialKey,a.indexFrom=i,a.indexCount=n.indexFrom+n.indexCount-i,t.splice(r+1,0,a),n.indexCount=i-n.indexFrom}return r}}}_addToList(e,t){const r=this._getDisplayList(e.symbolLevel,e.zOrder),n=null!=t?t:r.length-1,a=n>=0&&n<r.length?r[n]:null;if(null!==a&&a.materialKey===e.materialKey&&a.indexFrom+a.indexCount===e.indexFrom&&a.geometryType===e.geometryType)a.indexCount+=e.indexCount;else{const d=new ye;d.indexFrom=e.indexFrom,d.indexCount=e.indexCount,d.materialKey=e.materialKey,d.geometryType=e.geometryType,Te(r,n+1,0,d)}}_removeFromList(e){const i=this._getDisplayList(e.symbolLevel,e.zOrder),r=i.length;let n;for(let a=0;a<r;++a){const d=i[a];if(e.indexFrom+e.indexCount>d.indexFrom&&e.indexFrom<d.indexFrom+d.indexCount&&d.geometryType===e.geometryType){n=a;break}}if(void 0!==n){const a=i[n];if(e.indexFrom===a.indexFrom)return a.indexCount-=e.indexCount,a.indexFrom+=e.indexCount,0===a.indexCount&&Te(i,n,1),n-1;if(e.indexFrom+e.indexCount===a.indexFrom+a.indexCount)return a.indexCount-=e.indexCount,0===a.indexCount?(Te(i,n,1),n-1):n;{const d=a.indexFrom,h=e.indexFrom-a.indexFrom,c=e.indexCount,l=a.indexFrom+a.indexCount-(e.indexFrom+e.indexCount);a.indexCount=h;const u=new ye;return u.geometryType=a.geometryType,u.materialKey=a.materialKey,u.indexFrom=d+h+c,u.indexCount=l,Te(i,n+1,0,u),n}}return null}_getDisplayList(e,t){let s;const i=this.symbolLevels.length;for(let a=0;a<i;a++)if(this.symbolLevels[a].symbolLevel===e){s=this.symbolLevels[a];break}let r;s||(s=new Ke,s.symbolLevel=e,this.symbolLevels.push(s));const n=s.zLevels.length;for(let a=0;a<n;a++)if(s.zLevels[a].zLevel===t){r=s.zLevels[a];break}return r||(r=new Ze,r.geometryDPInfo=new Fe,r.zLevel=t,s.zLevels.push(r)),r.geometryDPInfo.unified||(r.geometryDPInfo.unified=[]),r.geometryDPInfo.unified}getDPInfoType(){return"unified"}}class ye{constructor(){this.materialKey=null,this.indexFrom=0,this.indexCount=0}clone(){const e=new ye;return e.geometryType=this.geometryType,e.materialKey=this.materialKey,e.indexFrom=this.indexFrom,e.indexCount=this.indexCount,e}}class Fe{constructor(){this.fill=null,this.line=null,this.marker=null,this.text=null,this.label=null,this.unified=null}clone(){const e=new Fe;return e.fill=this.fill&&this.fill.map(t=>t.clone()),e.line=this.line&&this.line.map(t=>t.clone()),e.marker=this.marker&&this.marker.map(t=>t.clone()),e.text=this.text&&this.text.map(t=>t.clone()),e.label=this.label&&this.label.map(t=>t.clone()),e.unified=this.unified&&this.unified.map(t=>t.clone()),e}}class Ze{constructor(){this.geometryDPInfo=new Fe}clone(){const e=new Ze;return e.zLevel=this.zLevel,e.geometryDPInfo=this.geometryDPInfo.clone(),e}}class Ke{constructor(){this.zLevels=[]}clone(){const e=new Ke;e.symbolLevel=this.symbolLevel;for(const t of this.zLevels)e.zLevels.push(t.clone());return e}}class Je{constructor(){this.vertexData=new Map,this.vertexCount=0,this.indexData=[]}clear(){this.vertexData.clear(),this.vertexCount=0,this.indexData=[]}update(e,t,s){for(const i in e)this.vertexData.set(i,e[i]);for(const i in this.vertexData)null===e[i]&&this.vertexData.delete(i);this.vertexCount=t,this.indexData=s}}class ne{constructor(e,t,s,i=0,r=0){this.id=e,this.geometryType=t,this.materialKey=s,this.minZoom=i,this.maxZoom=r,this.meshData=null,this.symbolLevel=0,this.zOrder=0,this.vertexFrom=0,this.vertexCount=0,this.indexFrom=0,this.indexCount=0}get sortKey(){return void 0===this._sortKey&&this._computeSortKey(),this._sortKey}clone(){return this.copy()}copy(){const e=new ne(this.id,this.geometryType,this.materialKey);return e.vertexFrom=this.vertexFrom,e.vertexCount=this.vertexCount,e.indexFrom=this.indexFrom,e.indexCount=this.indexCount,e.zOrder=this.zOrder,e.symbolLevel=this.symbolLevel,e.meshData=this.meshData,e.minZoom=this.minZoom,e.maxZoom=this.maxZoom,e}setMeshDataFromBuffers(e,t,s){const i=new Je;for(const r in t){const n=t[r].stride,a=t[r].data,d=[],h=(0,M.Y8)(n);for(let c=0;c<n*e.vertexCount/h;++c)d[c]=a[c+n*e.vertexFrom/h];i.vertexData.set(r,d)}i.indexData.length=0;for(let r=0;r<e.indexCount;++r)i.indexData[r]=s[r+e.indexFrom]-e.vertexFrom;i.vertexCount=e.vertexCount,this.meshData=i}readMeshDataFromBuffers(e,t){this.meshData?this.meshData.clear():this.meshData=new Je;for(const s in e){const i=e[s].stride,r=e[s].data,n=[],a=(0,M.Y8)(i);for(let d=0;d<i*this.vertexCount/a;++d)n[d]=r[d+i*this.vertexFrom/a];this.meshData.vertexData.set(s,n)}this.meshData.indexData.length=0;for(let s=0;s<this.indexCount;++s)this.meshData.indexData[s]=t[s+this.indexFrom]-this.vertexFrom;this.meshData.vertexCount=this.vertexCount}writeMeshDataToBuffers(e,t,s,i){for(const r in t){const n=t[r].stride,a=this.meshData.vertexData.get(r),d=t[r].data,h=(0,M.Y8)(n);for(let c=0;c<n*this.meshData.vertexCount/h;++c)d[c+n*e/h]=a[c]}for(let r=0;r<this.meshData.indexData.length;++r)i[r+s]=this.meshData.indexData[r]+e;this.vertexFrom=e,this.vertexCount=this.meshData.vertexCount,this.indexFrom=s,this.indexCount=this.meshData.indexData.length}static writeAllMeshDataToBuffers(e,t,s){let i=0,r=0;for(const n of e)n.writeMeshDataToBuffers(i,t,r,s),i+=n.vertexCount,r+=n.indexCount}_computeSortKey(){this._sortKey=(31&this.symbolLevel)<<12|(127&this.zOrder)<<4|7&this.geometryType}serialize(e){return e.push(this.geometryType),e.push(this.materialKey),e.push(this.vertexFrom),e.push(this.vertexCount),e.push(this.indexFrom),e.push(this.indexCount),e.push(this.minZoom),e.push(this.maxZoom),e}static deserialize(e,t){const s=e.readInt32(),i=e.readInt32(),r=new ne(t.id,s,i);return r.vertexFrom=e.readInt32(),r.vertexCount=e.readInt32(),r.indexFrom=e.readInt32(),r.indexCount=e.readInt32(),r.minZoom=e.readInt32(),r.maxZoom=e.readInt32(),r}}function Qe(o,e){if(null!==e){o.push(e.length);for(const t of e)t.serialize(o);return o}o.push(0)}class oe{constructor(e){this.insertAfter=null,this.id=e,this.displayRecords=[]}copy(){const e=new oe(this.id);return e.set(this),e}clone(){const e=new oe(this.id);return e.displayRecords=this.displayRecords.map(t=>t.clone()),e.insertAfter=this.insertAfter,e}set(e){this.id=e.id,this.displayRecords=e.displayRecords,this.insertAfter=e.insertAfter}serialize(e){return e.push(this.id),Qe(e,this.displayRecords),e}static deserialize(e){const t=e.readInt32(),s=new oe(t);return s.displayRecords=function ht(o,e,t){const s=o.readInt32(),i=new Array(s);for(let r=0;r<i.length;r++)i[r]=e.deserialize(o,t);return i}(e,ne,{id:t}),s}}class ge{constructor(){}get displayObjectRegistry(){if(!this._displayObjectRegistry){this._displayObjectRegistry=new Map;for(const e of this.displayObjects)this._displayObjectRegistry.set(e.id,e)}return this._displayObjectRegistry}get displayList(){return this._displayList}computeDisplayList(){this._displayList=new je;for(const e of this.displayObjects)for(const t of e.displayRecords)this._displayList.addToList(t)}clone(){const e=new ge;return this.displayObjects&&(e.displayObjects=this.displayObjects.map(t=>t.clone())),e}serialize(e){return Qe(e,this.displayObjects),e}_deserializeObjects(e){const t=e.readInt32(),s=new Array(t),i=new Map;for(let r=0;r<s.length;++r){const n=oe.deserialize(e);s[r]=n,i.set(n.id,n)}this.displayObjects=s,this._displayList=null,this._displayObjectRegistry=i}static deserialize(e){const t=new ge;return t._deserializeObjects(e),t}}var ut=f(37633);class ae{constructor(e,t){this.data=e,this.stride=t}static decode(e){const t=(0,M.e2)(e.data,e.stride);return new ae(t,e.stride)}static fromVertexVector(e){const t=(0,M.e2)(e.data.buffer(),e.stride);return new ae(t,e.stride)}}class le{constructor(e,t,s){this.geometryType=e,this.indexBuffer=new Uint32Array(t),this.namedBuffers=s}static decode(e){const t=e.geometryType,s=e.indexBuffer,i={};for(const r in e.namedBuffers)i[r]=ae.decode(e.namedBuffers[r]);return new le(t,s,i)}static fromVertexData(e,t){const s=e.indices,i=(0,M.e2)(e.vertices,e.stride),n={geometry:new ae(i,e.stride)};return new le(t,s,n)}static fromVertexVectors(e){const t=e.geometryType,s=e.indexVector.buffer(),i={};for(const r in e.namedVectors)i[r]=ae.fromVertexVector(e.namedVectors[r]);return new le(t,s,i)}}var Ie=f(75734);class ft{constructor(e,t){this.data=e,this.stride=t}get vertexCount(){const t=this.data.length/(this.stride/4);return t!==(0|t)&&console.debug("Corrupted stride"),t}transfer(e,t){const s=this.data.buffer();e.vertexCount=this.vertexCount,e.data=s,e.stride=this.stride,t.push(s)}}class mt{constructor(e,t,s){this.geometryType=e,this.indexVector=new Ie.Z(Uint32Array,6*t),this.namedVectors={};const i=(0,M.$_)(e,s);for(const r in i){const n=i[r];let a;switch(n%4){case 0:case 2:a=new Ie.Z(Uint32Array,n*t);break;case 1:case 3:a=new Ie.Z(Uint8Array,n*t)}this.namedVectors[r]=new ft(a,n)}}get(e){return this.namedVectors[e].data}getVector(e){return this.namedVectors[e]}transfer(e,t){const s=this.indexVector.buffer(),i={};t.push(s);for(const r in this.namedVectors){const n=this.namedVectors[r];i[r]={},n.transfer(i[r],t)}e.geometryType=this.geometryType,e.indexBuffer=s,e.namedBuffers=i,this.destroy()}intoBuffers(){const e=le.fromVertexVectors(this);return this.destroy(),e}destroy(){this.indexVector=null,this.namedVectors=null}}const Se=new Ye,de=new Ye;function yt(o,e){const t={};for(const s in o){const i={data:(0,M.C$)(e,o[s]),stride:o[s]};t[s]=i}return t}class W{constructor(){this.tileDisplayData=null,this.tileBufferData=null}reshuffle(){Se.reset();const e=function ct(o){const e=[[],[],[],[],[]],t=o;for(const s of t)for(const i of s.displayRecords)e[i.geometryType].push(i);return e}(this.tileDisplayData.displayObjects);for(const i of e)for(const r of i)r&&Se.needMore(r.geometryType,r.meshData?r.meshData.vertexCount:r.vertexCount,r.meshData?r.meshData.indexData.length:r.indexCount);const t=e.length,s=new re;for(let i=0;i<t;++i){s.geometries[i].indexBuffer=new Uint32Array(Math.round(1.5*Se.indicesFor(i)));const r=[];for(const h in this.tileBufferData.geometries[i].vertexBuffer)r.push(this.tileBufferData.geometries[i].vertexBuffer[h].stride);const n=W._computeVertexAlignment(r),a=Math.round(1.5*Se.verticesFor(i)),d=W._align(a,n);for(const h in this.tileBufferData.geometries[i].vertexBuffer){const c=this.tileBufferData.geometries[i].vertexBuffer[h].stride;s.geometries[i].vertexBuffer[h]={stride:c,data:(0,M.C$)(d,c)}}}de.reset(),this.tileDisplayData.displayList.clear();for(let i=0;i<t;++i){const r=e[i];for(const n of r){if(n.meshData)n.writeMeshDataToBuffers(de.verticesFor(i),s.geometries[i].vertexBuffer,de.indicesFor(i),s.geometries[i].indexBuffer),n.meshData=null;else{const a=this.tileBufferData.geometries[i].vertexBuffer,d=this.tileBufferData.geometries[i].indexBuffer,h=s.geometries[i].vertexBuffer,c=s.geometries[i].indexBuffer,l=de.verticesFor(i),u=de.indicesFor(i);(0,M.wO)(l,u,h,c,n,a,d),n.vertexFrom=l,n.indexFrom=u}de.needMore(i,n.vertexCount,n.indexCount)}}for(const i of this.tileDisplayData.displayObjects)this.tileDisplayData.displayList.addToList(i.displayRecords);this.tileBufferData=s}getStrides(){const e=[];for(let t=0;t<this.tileBufferData.geometries.length;++t){const s=this.tileBufferData.geometries[t];e[t]={};for(const i in s.vertexBuffer)e[t][i]=s.vertexBuffer[i].stride}return e}clone(){const e=new W;return e.tileBufferData=this.tileBufferData.clone(),e.tileDisplayData=this.tileDisplayData.clone(),e}_guessSize(){const{displayObjects:e}=this.tileDisplayData,t=Math.min(e.length,4);let r=0;for(let n=0;n<t;n++)r=Math.max(r,e[n].displayRecords.length);return 2*(12*e.length+e.length*r*40)}serialize(){const e=this.tileBufferData.serialize(),t=this.tileBufferData.getBuffers(),s=this.tileDisplayData.serialize(new Ie.Z(Int32Array,this._guessSize())).buffer();return t.push(s),{result:{displayData:s,bufferData:e},transferList:t}}static fromVertexData(e,t){const s={},i=new Map;for(const r of t)i.set(r.id,r);return(0,M.Z_)(r=>{const n=e.data[r];if((0,F.pC)(n)){const a=ut.$.from(n.records).getCursor();for(;a.next();){const d=a.id,h=a.materialKey,c=a.indexFrom,l=a.indexCount,u=a.vertexFrom,m=a.vertexCount,p=i.get(d),b=new ne(d,r,h);b.indexFrom=c,b.indexCount=l,b.vertexFrom=u,b.vertexCount=m,p.displayRecords.push(b)}s[r]=le.fromVertexData(n,r)}else s[r]=new mt(r,0,{fill:"default"}).intoBuffers()}),W.fromMeshData({displayObjects:t,vertexBuffersMap:s})}static fromMeshData(e){const t=new W,s=new ge,i=new re;s.displayObjects=e.displayObjects;for(const r in e.vertexBuffersMap){const n=e.vertexBuffersMap[r];i.geometries[r].indexBuffer=n.indexBuffer,i.geometries[r].vertexBuffer=n.namedBuffers}return t.tileDisplayData=s,t.tileBufferData=i,t}static bind(e,t){const s=new W;return s.tileDisplayData=e,s.tileBufferData=t,s}static create(e,t){const s=new W;s.tileDisplayData=new ge,s.tileDisplayData.displayObjects=e;const i=[0,0,0,0,0],r=[0,0,0,0,0],n=[[],[],[],[],[]];for(const h of e)for(const c of h.displayRecords)n[c.geometryType].push(c),i[c.geometryType]+=c.meshData.vertexCount,r[c.geometryType]+=c.meshData.indexData.length;const a=new re,d=function gt(o){return[o.fill||{},o.line||{},o.icon||{},o.text||{},o.label||{}]}(t);for(let h=0;h<5;h++){const c=new Uint32Array(r[h]),l=yt(d[h],i[h]);ne.writeAllMeshDataToBuffers(n[h],l,c),a.geometries[h]={indexBuffer:c,vertexBuffer:l}}return s.tileBufferData=a,s}static _align(e,t){const s=e%t;return 0===s?e:e+(t-s)}static _computeVertexAlignment(e){let t=!1,s=!1;for(const i of e)i%4==2?t=!0:i%4!=0&&(s=!0);return s?4:t?2:1}}var xt=f(55130),vt=f(246),_t=f(1825),bt=f(32940),ke=f(23997),Dt=f(36682),Ct=f(93872),xe=f(82054),Bt=f(25208),Tt=f(64822);class Me extends Tt.i{constructor(e,t){super(e,t,null)}static from(e){const t=Bt.s.createInstance(),s=[],i=e.filter(r=>!!r.geometry);for(const r of i){const n=(0,y.Ji)(r.geometry);(0,xe.E7)(s,[r],n,!1,!1,"uid")}return new Me(t,s)}get geometryType(){const e=this._current;return e?e.geometryType:null}get insertAfter(){return this._current.insertAfter}readGraphic(){return this._current}getCursor(){return this.copy()}copy(){const e=new Me(this.instance,this._features);return this.copyInto(e),e}}var Re=f(23841),Ft=f(76279),It=f(62825),St=f(89932),Mt=f(27105),we=f(7848),qe=f(88071),C=f(64596);const ve=new qe.Z,Ee=new qe.Z,et="esriGeometryPolyline";function tt(o){o.coords.length=0,o.lengths.length=0}class X{constructor(){this.bounds=(0,I.Ue)(),this.graphic=null}static acquire(e=null,t,s,i,r){let n;return 0===X._pool.length?n=new X:(n=X._pool.pop(),this._set.delete(n)),n.acquire(e,t,s,i,r),n}static release(e){e&&!this._set.has(e)&&(e.release(),this._pool.push(e),this._set.add(e))}static getCentroidQuantized(e,t){if((0,y.oU)(e.geometry)){const s=e.symbol;if((0,F.Wi)(s))return null;if((0,C.yA)(s.type)||(0,C.ab)(s.type)){const i=(0,Mt.tO)(e.geometry);return(0,we.RF)(t,{},{x:i[0],y:i[1]},!1,!1)}}return null}acquire(e=null,t,s,i,r){e&&this.set(e,t,s,i,r)}release(){this.graphic=null,this.symbolResource=null,this.geometry=null}get symbol(){return this.symbolResource.symbol}set(e,t,s,i,r){this.graphic=e,this.geometry=s,this.symbolResource=t,this.bounds=i,r&&(this.size=r)}getGeometryQuantized(e,t,s,i){const r=this.geometry;if((0,y.oU)(r)){const n=r.rings;if(1===n.length&&2===n[0].length)return(0,we.ym)(e,{paths:[[n[0][0],n[0][1]]]})}else{if((0,y.l9)(r))return tt(ve),tt(Ee),(0,xe.u0)(ve,r),(0,xe.zj)(Ee,ve,r.hasZ,r.hasM,et,e.scale[0]),(0,xe.Nh)(ve,Ee,r.hasZ,r.hasM,et,e),(0,xe.J6)(ve,r.hasZ,r.hasM);if((0,y.aW)(r)){const n=.5*i*Math.max(Math.abs(this.size[0])+this.size[2]-this.size[0],Math.abs(this.size[1])+this.size[3]-this.size[1]),[a,d]=(0,S.uS)(s),h=d-a,c=r.points.filter(l=>{if(l[0]+n>d||l[0]-n<a){const u=[...l];return l[0]+n>d?u[0]-=h:u[0]+=h,(0,I.Zm)(t,l,n)||(0,I.Zm)(t,u,n)}return(0,I.Zm)(t,l,n)});return 0===c.length?{points:c}:(0,we.ym)(e,{points:c})}}return(0,we.ym)(e,this.geometry)}}X._pool=[],X._set=new Set;const _e={minX:0,minY:0,maxX:0,maxY:0},he=(0,I.Ue)();function Le(o,e,t,s,i){return _e.minX=e,_e.minY=t,_e.maxX=s,_e.maxY=i,o.search(_e)}function Rt(o){return{minX:o.bounds[0],minY:o.bounds[1],maxX:o.bounds[2],maxY:o.bounds[3]}}class wt{constructor(e,t,s,i,r,n,a){this._graphics=i,this._onAdd=r,this._onRemove=n,this._hashToCIM=a,this._index=(0,Ft.r)(9,Rt),this._itemByGraphic=new Map,this._inflatedSizeHelper=new fe.IV,this._tileInfoView=e,this._uidFieldName=s;const d=e.getClosestInfoForScale(t);d&&(this._resolution=this._tileInfoView.getTileResolution(d.level))}setResourceManager(e){this._cimResourceManager=e,this._hittestDrawHelper=new St.Tu(e)}hitTest(e,t,s,i,r){e=(0,It.or)(e,this._tileInfoView.spatialReference);const n=.5*i*window.devicePixelRatio*s;he[0]=e-n,he[1]=t-n,he[2]=e+n,he[3]=t+n;const a=.5*i*(s+C.y1),d=Le(this._index,e-a,t-a,e+a,t+a);if(!d||0===d.length)return[];const h=[],c=(0,I.Ue)(),l=(0,I.Ue)();for(const p of d){const{geometry:b,symbolResource:z}=p;this._getSymbolBounds(c,z,b,l,r),l[3]=l[2]=l[1]=l[0]=0,(0,I.kK)(c,he)&&p.graphic.visible&&h.push(p)}if(0===h.length)return[];const u=this._hittestDrawHelper,m=[];for(const p of h){const{geometry:b,symbolResource:z}=p,{hash:U,textInfo:$}=z,J=this._hashToCIM.get(U);J&&u.hitTest(he,J.symbol,b,$,r,i)&&m.push(p)}return m.sort(Lt),m.map(p=>p.graphic)}getGraphicsData(e,t,s){const i=this._searchForItems(t);if(0===i.length||0===s.length)return[];i.sort((l,u)=>l.zorder-u.zorder),i[0].insertAfter=-1;for(let l=1;l<i.length;l++)i[l].insertAfter=i[l-1].graphic.uid;i.sort((l,u)=>l.graphic.uid-u.graphic.uid),s.sort((l,u)=>l.uid-u.uid);let r,n=0,a=0;const d=t.resolution,h=[],c={originPosition:"upperLeft",scale:[d,d],translate:[t.bounds[0],t.bounds[3]]};for(const l of s){for(a=-2;n<i.length;)if(r=i[n],n++,l.uid===r.graphic.uid){a=r.insertAfter;break}if(!r.geometry||-2===a)continue;const u=r.getGeometryQuantized(c,t.bounds,this._tileInfoView.spatialReference,d),m=We({},r.graphic.attributes);m[this._uidFieldName]=l.uid,null==r.groupId&&(r.groupId=e.createTemplateGroup(r.symbol,null)),h.push({centroid:X.getCentroidQuantized(r,c),geometry:u,attributes:m,symbol:r.symbol,groupId:r.groupId,insertAfter:a,zorder:r.zorder})}return h.sort((l,u)=>l.zorder-u.zorder),h}queryTileData(e,t){if(0===this._graphics.length)return[];const{bounds:s,resolution:i}=t,r=this._searchForItems(t),n=[];return 0===r.length||this._createTileGraphics(n,e,r,{originPosition:"upperLeft",scale:[i,i],translate:[s[0],s[3]]},t),n}has(e){return this._itemByGraphic.has(e)}getBounds(e){const t=this._itemByGraphic.get(e);return t?t.bounds:null}getAllBounds(){return Array.from(this._itemByGraphic.values()).filter(e=>e.graphic.visible).map(e=>e.bounds)}addOrModify(e,t,s){if(!e||(0,F.Wi)(t))return;this.has(e)&&this.remove(e),this._onAdd(e);const i=[0,0,0,0],r=this._getSymbolBounds(null,t,s,i,0),n=X.acquire(e,t,s,(0,F.pC)(r)?r:null,i);return this._itemByGraphic.set(e,n),s&&this._index.insert(n),n.bounds}remove(e){if(!this._itemByGraphic.has(e))return;this._onRemove(e);const t=this._itemByGraphic.get(e);t.bounds&&this._index.remove(t),this._itemByGraphic.delete(e)}updateZ(){const e=this._graphics.items;let t,s;for(let i=0;i<e.length;i++)s=e[i],t=this._itemByGraphic.get(s),t&&(t.zorder=i)}update(e,t,s){const i=this._itemByGraphic.get(e);i.groupId=null;const r=(0,I.d9)(i.bounds);this._index.remove(i);const n=this._getSymbolBounds(i.bounds,t,s,i.size,0);return(0,F.pC)(n)&&i.set(e,t,s,n,i.size),s&&this._index.insert(i),{oldBounds:r,newBounds:i.bounds}}updateLevel(e){if(this._resolution===e)return;this._resolution=e,this._index.clear();const t=this._itemByGraphic,s=[];for(const[i,r]of t){const n=this._getSymbolBounds(r.bounds,r.symbolResource,r.geometry,r.size,0);r.geometry&&(0,F.pC)(n)&&(r.bounds=n,s.push(r))}this._index.load(s)}clear(){this._itemByGraphic.clear(),this._index.clear()}_createTileGraphics(e,t,s,i,r){const n=this._uidFieldName,a=this._tileInfoView.spatialReference,{bounds:d,resolution:h}=r;let c,l,u,m;s.sort((p,b)=>p.zorder-b.zorder);for(let p=0;p<s.length;p++){u=s[p],c=u.graphic,l=u.getGeometryQuantized(i,d,a,h),m=0===p?-1:s[p-1].graphic.uid;const b=We({},u.graphic.attributes);b[n]=c.uid,null==u.groupId&&(u.groupId=t.createTemplateGroup(u.symbol,null)),e.push({centroid:X.getCentroidQuantized(u,i),geometry:l,attributes:b,symbol:u.symbol,groupId:u.groupId,insertAfter:m,zorder:u.zorder})}}_searchForItems(e){const t=this._tileInfoView.spatialReference,s=e.bounds;if(t.isWrappable){const[i,r]=(0,S.uS)(t),n=Math.abs(s[2]-r)<1e-5,a=Math.abs(s[0]-i)<1e-5;if((!n||!a)&&(n||a)){const d=e.resolution;let h;h=(0,I.Ue)(n?[i,s[1],i+d*C.y1,s[3]]:[r-d*C.y1,s[1],r,s[3]]);const c=Le(this._index,s[0],s[1],s[2],s[3]),l=Le(this._index,h[0],h[1],h[2],h[3]);return[...new Set([...c,...l])]}}return Le(this._index,s[0],s[1],s[2],s[3])}_getSymbolBounds(e,t,s,i,r){if(!t||!t.symbol||!s)return null;if(e||(e=(0,I.Ue)()),(0,V.$P)(e,s),!i||0===i[0]&&0===i[1]&&0===i[2]&&0===i[3]){const{hash:d,textInfo:h}=t,c=this._hashToCIM.get(d);if(!c)return null;i||(i=[0,0,0,0]);const l=this._inflatedSizeHelper.getSymbolInflateSize(i,c.symbol,this._cimResourceManager,r,h);i[0]=(0,Re.F2)(l[0]),i[1]=(0,Re.F2)(l[1]),i[2]=(0,Re.F2)(l[2]),i[3]=(0,Re.F2)(l[3])}const n=this._resolution,a=fe.IV.SafeSize(i);return e[0]-=a*n,e[1]-=a*n,e[2]+=a*n,e[3]+=a*n,e}}const Lt=(o,e)=>{const t=(0,C.eT)(o.graphic),s=(0,C.eT)(e.graphic);return t===s?e.zorder-o.zorder:t-s};var At=f(11263),zt=f(61996);const Ot=o=>{let e=class extends((0,zt.I)(o)){constructor(){super(...arguments),this.graphics=null,this.renderer=null}};return(0,T._)([(0,O.Cb)()],e.prototype,"graphics",void 0),(0,T._)([(0,O.Cb)()],e.prototype,"renderer",void 0),(0,T._)([(0,O.Cb)()],e.prototype,"updating",void 0),(0,T._)([(0,O.Cb)()],e.prototype,"view",void 0),e=(0,T._)([(0,ee.j)("esri.views.layers.GraphicsView")],e),e};var Gt=f(31637);const Ut=(0,q.Z)("esri-2d-graphic-debug");function He(o,e,t){if(t.has(o))return t.get(o);const s={tile:e,addedOrModified:[],removed:[]};return t.set(o,s),s}let Y=class extends(Ot((0,k.p)(Z.Z))){constructor(o){super(o),this._storage=new Ct.O,this._displayIds=new Map,this._controller=new AbortController,this._tiles=new Map,this._graphicStoreUpdate=!1,this._graphicsSet=new Set,this._matcher=Promise.resolve(null),this._tileUpdateSet=new Set,this._tilesToUpdate=new Map,this._graphicIdToAbortController=new Map,this._attached=!1,this._highlightIds=new Map,this._updatingGraphicsTimer=null,this._hashToExpandedSymbol=new Map,this._hashToExpandedSymbolPromise=new Map,this._hashToCIMSymbolPromise=new Map,this._hashToCIM=new Map,this._processing=!1,this._needsProcessing=!1,this._pendingUpdate={added:new Set,updated:new Set,removed:new Set},this.lastUpdateId=-1,this.updateRequested=!1,this.graphicUpdateHandler=this.graphicUpdateHandler.bind(this)}_createMatcher(o,e,t){if(o){const s=(0,ke.createMatcherSchema)({indexCount:0,fields:{}},"feature",o);this._matcher=(0,bt.fL)(s,e,null,t)}}_createDisplayId(o){return this._displayIds.has(o)||this._displayIds.set(o,this._storage.createDisplayId()),this._displayIds.get(o)}initialize(){this._attributeStore=new Dt.Z({type:"local",initialize:i=>Promise.resolve(this.container.attributeView.initialize(i)),update:i=>this.container.attributeView.requestUpdate(i),render:()=>this.container.requestRender()},(0,Gt.Z)()),this.container.hasHighlight=()=>!!this._highlightIds.size;const t=new _t.Wr(this.container.getMaterialItems.bind(this.container),this.view.featuresTilingScheme.tileInfo);this._graphicStore=new wt(this.view.featuresTilingScheme,this.view.state.scale,this.uid,this.graphics,i=>{this._createDisplayId(i.uid),this._setFilterState(i.uid,i.visible)},i=>{const r=this._displayIds.get(i.uid);this._displayIds.delete(i.uid),this._storage.releaseDisplayId(r)},this._hashToCIM),this._meshFactory=new vt.j(null,this.uid,t),this._templateStore=t,this.handles.add([this.watch("renderer",i=>{this._createMatcher(i,t,this.container.stage.resourceManager);for(const r of this.graphics)this._pendingUpdate.updated.add(r);this.requestUpdate()}),this.view.graphicsTileStore.on("update",i=>this._onTileUpdate(i)),this.container.on("attach",()=>{Ut&&this.container.enableRenderingBounds(()=>this._graphicStore.getAllBounds()),this.graphics.items.length>0&&this._graphicsChangeHandler({target:this.graphics,added:this.graphics.items,removed:[],moved:[]}),this.handles.add(this.graphics.on("change",r=>this._graphicsChangeHandler(r)),"graphics");const i=this.container.stage.resourceManager;this._createMatcher(this.renderer,t,i),this._graphicStore.setResourceManager(i),this._attached=!0,this.notifyChange("updating")})]),this._onTileUpdate({added:this.view.graphicsTileStore.tiles,removed:[]})}destroy(){this._updatingGraphicsTimer&&(clearTimeout(this._updatingGraphicsTimer),this._updatingGraphicsTimer=null,this.notifyChange("updating")),this._controller.abort(),this.container.destroy(),this._set("graphics",null),this._graphicStore.clear(),this._attributeStore=null,this._hashToExpandedSymbol.clear(),this.view=null,this.renderer=null,this._hashToCIM.clear(),this._hashToCIMSymbolPromise.clear(),this._hashToExpandedSymbolPromise.clear()}get updating(){return!this._attached||null!==this._updatingGraphicsTimer||this._tileUpdateSet.size>0||this._tilesToUpdate.size>0}hitTest(o){if(!this.view||!this.view.position)return null;const{resolution:e,rotation:t}=this.view.state;return this._graphicStore.hitTest(o.x,o.y,2,e,t)}update(o){(0,D.k_)(this._controller.signal);const e=o.state,{resolution:t}=e;if(this._graphicStore.updateLevel(t),this._graphicStoreUpdate=!0,this.updateRequested=!1,this._pendingUpdate.updated.size>0){if(!this._processing)return void this._updateGraphics();this._needsProcessing=!0}}viewChange(){this.requestUpdate()}requestUpdate(){this.updateRequested||(this.updateRequested=!0,this.requestUpdateCallback())}processUpdate(o){this.updateRequested&&(this.updateRequested=!1,this.update(o))}graphicUpdateHandler(o){const{graphic:e,property:t,newValue:s}=o;switch(t){case"attributes":break;case"geometry":case"symbol":this._pendingUpdate.updated.add(e),this.requestUpdate();break;case"visible":this._setFilterState(e.uid,s),this._attributeStore.sendUpdates()}}addHighlight(o){for(const e of o)if(this._highlightIds.has(e)){const t=this._highlightIds.get(e);this._highlightIds.set(e,t+1)}else this._highlightIds.set(e,1);this._updateHighlight()}removeHighlight(o){for(const e of o)if(this._highlightIds.has(e)){const t=this._highlightIds.get(e)-1;0===t?this._highlightIds.delete(e):this._highlightIds.set(e,t)}this._updateHighlight()}_updateHighlight(){const o=Array.from(this._highlightIds.keys()),e=o.map(t=>this._displayIds.get(t));this._attributeStore.setHighlight(o,e)}_getIntersectingTiles(o){const e=this._graphicStore.getBounds(o);if(!e||0===(0,I.bf)(e)||0===(0,I.Cb)(e))return[];const t=(0,C.Zu)(e,this.view.spatialReference);return(0,F.pC)(t)?[...new Set([...this.view.graphicsTileStore.boundsIntersections(t[0]),...this.view.graphicsTileStore.boundsIntersections(t[1])])]:this.view.graphicsTileStore.boundsIntersections(e)}_updateTile(o){var e=this;return(0,j.Z)(function*(){(0,D.k_)(e._controller.signal);const t=o.tile,s=e._getGraphicsData(e._templateStore,t,o.addedOrModified),i=yield e._processGraphics(t,s);return(0,D.k_)(e._controller.signal),e._patchTile(t.key,{type:"update",addOrUpdate:i,remove:o.removed,end:!0,clear:!1,sort:!1}),i})()}_patchTile(o,e){if(!this._tiles.has(o))return;const t=this._tiles.get(o);this.container.onTileData(t,e),this.container.requestRender()}_graphicsChangeHandler(o){const e=this._pendingUpdate;for(const t of o.added)e.added.add(t);for(const t of o.moved)e.updated.add(t);for(const t of o.removed)this._pendingUpdate.added.has(t)?e.added.delete(t):e.removed.add(t);this._processing?this._needsProcessing=!0:this._updateGraphics()}_getGraphicsToUpdate(){const o={added:[],removed:[],updated:[]};if(!this.graphics)return o;const e=this._pendingUpdate;for(const t of this.graphics.items)e.added.has(t)?o.added.push(t):e.updated.has(t)&&o.updated.push(t);for(const t of e.removed)this._graphicStore.has(t)&&o.removed.push(t);return e.added.clear(),e.removed.clear(),e.updated.clear(),o}_updateGraphics(){var o=this;return(0,j.Z)(function*(){o._processing=!0;const{added:e,removed:t,updated:s}=o._getGraphicsToUpdate(),i=o._tilesToUpdate;let r;try{if(!o._graphicStoreUpdate){const l=o.view.state,{resolution:u}=l;o._graphicStore.updateLevel(u)}const n=[],a=new Array(e.length+t.length);for(let l=0;l<s.length;l++){const u=s[l],m=o._getIntersectingTiles(u);for(const p of m)r=p.id,He(r,p,i).removed.push(o._displayIds.get(u.uid));n.push(o._updateGraphic(u,null)),a[l]=u}const d=s.length;for(let l=0;l<e.length;l++){const u=e[l];a[d+l]=u,o._graphicsSet.add(u),n.push(o._addGraphic(u))}for(const l of t){o._abortProcessingGraphic(l.uid);const u=o._getIntersectingTiles(l);for(const m of u)r=m.id,He(r,m,i).removed.push(o._displayIds.get(l.uid));o._graphicsSet.delete(l),o._graphicStore.remove(l)}let h;o._flipUpdatingGraphics(),yield Promise.all(n);for(let l=0;l<a.length;l++){h=a[l];const u=o._getIntersectingTiles(h);for(const m of u)r=m.id,He(r,m,i).addedOrModified.push(h)}o._graphicStore.updateZ();const c=[];for(const[l,u]of i)c.push(o._updateTile(u));yield Promise.all(c)}catch(n){(0,D.D_)(n)}for(const n of t)try{const a=yield o._getSymbolForGraphic(n,{});if(a){const d=a.hash();o._hashToExpandedSymbol.delete(d)}}catch(a){(0,D.D_)(a)}i.clear(),o.notifyChange("updating"),o._processing=!1,o._needsProcessing&&(o._needsProcessing=!1,o._updateGraphics())})()}_getArcadeInfo(o){const e=(o.attributes?Object.keys(o.attributes):[]).map(t=>({name:t,alias:t,type:"string"==typeof o.attributes[t]?"esriFieldTypeString":"esriFieldTypeDouble"}));return(0,F.Wi)(o.geometry)?null:{geometryType:(0,y.Ji)(o.geometry),spatialReference:ue.Z.fromJSON(o.geometry.spatialReference),fields:e}}_getSymbolForGraphic(o,e){return(0,D.k_)(this._controller.signal),(0,F.pC)(o.symbol)?Promise.resolve(o.symbol):(0,F.pC)(this.renderer)?this.renderer.getSymbolAsync(o,{scale:this.view.scale,abortOptions:e}):Promise.resolve(this._getNullSymbol(o))}_getCIMSymbol(o,e,t){let s=this._hashToCIM.get(e);if(s)return Promise.resolve(s);const i=(0,fe.rW)(o);if((0,F.pC)(i)){if("CIMSymbolReference"===i.type)return s=i,this._hashToCIM.set(e,s),Promise.resolve(s);let r=this._hashToCIMSymbolPromise.get(e);return r||(r=i.fetchCIMSymbol(t).then(n=>(this._hashToCIM.set(e,n.data),this._hashToCIMSymbolPromise.delete(e),n)).catch(n=>(this._hashToCIMSymbolPromise.delete(e),(0,D.r9)(n),null)),this._hashToCIMSymbolPromise.set(e,r),r)}return Promise.resolve(null)}_expandCIMSymbol(o,e,t,s){const i=this._hashToExpandedSymbol.get(t);if(i)return Promise.resolve(i);let r=this._hashToExpandedSymbolPromise.get(t);if(r)return r;const n=this.container.stage,a=this._getArcadeInfo(e),d=(0,ke.createSymbolSchema)(o);return r=(0,At.B3)(d,a,n.resourceManager,s),this._hashToExpandedSymbolPromise.set(t,r),r.then(h=>(this._hashToExpandedSymbol.set(t,h),this._hashToExpandedSymbolPromise.delete(t),h)),r}_getSymbolResources(o,e){var t=this;return(0,j.Z)(function*(){return(0,D.k_)(t._controller.signal),t.container.stage?t._getSymbolForGraphic(o,e).then(s=>{const i=s.hash();return t._getCIMSymbol(s,i,e).then(r=>(0,F.Wi)(r)?null:t._expandCIMSymbol(r,o,i,e).then(n=>{const a=n.layers.filter(d=>"text"===d.type&&"string"==typeof d.text);if(a&&a.length>0){const d=new Array(a.length);for(let c=0;c<a.length;c++){const l=a[c],u=[],[m]=(0,ce.E)(l.text);for(let p=0;p<m.length;p++)u.push(m.charCodeAt(p));d[c]={symbol:l,id:c,glyphIds:u}}const h=new Map;return t.container.getMaterialItems(d).then(c=>{for(let l=0;l<a.length;l++){const u=a[l];h.set(u.cim,{text:u.text,mosaicItem:c[l].mosaicItem})}return{symbol:n,textInfo:h,hash:i}})}return{symbol:n,hash:i}}))}).catch(s=>((0,D.r9)(s),null)):null})()}_projectAndNormalizeGeometry(o,e){var t=this;return(0,j.Z)(function*(){if((0,D.k_)(t._controller.signal),(0,F.Wi)(o.geometry)||"mesh"===o.geometry.type)return null;let s=o.geometry;if((0,y.oU)(s))s.rings=s.rings;else if((0,y.l9)(s))s.paths=s.paths;else if((0,y.YX)(s)){const n=yield t._getSymbolForGraphic(o,e);(0,D.k_)(t._controller.signal),s=(0,C.yA)(n.type)||(0,C.ab)(n.type)?s.center:(0,C.XA)(s)}yield(0,De._W)(s.spatialReference,t.view.spatialReference);const i=function x(o){if(!o)return null;let e=null;const t=o.spatialReference,s=(0,te.C5)(t);if(!s)return"toJSON"in o?o.toJSON():o;const i=(0,te.sS)(t)?102100:4326,r=S.UZ[i].maxX,n=S.UZ[i].minX,a=S.UZ[i].plus180Line,d=S.UZ[i].minus180Line;let h;const c="toJSON"in o?o.toJSON():o;if((0,y.wp)(c))h=G(c,r,n);else if((0,y.aW)(c))c.points=c.points.map(l=>G(l,r,n)),h=c;else if((0,y.YX)(c))h=function B(o,e){if(!e)return o;const t=function se(o,e){const t=[],{ymin:s,ymax:i}=o,r=o.xmax-o.xmin,n=o.xmin,a=o.xmax;let d;const[h,c]=e.valid;d=L(o.xmin,e);const l=d.x,u=d.frameId;d=L(o.xmax,e);const m=d.x,p=d.frameId,b=l===m&&r>0;if(r>2*c){const z={xmin:n<a?l:m,ymin:s,xmax:c,ymax:i},U={xmin:h,ymin:s,xmax:n<a?m:l,ymax:i},$={xmin:0,ymin:s,xmax:c,ymax:i},J={xmin:h,ymin:s,xmax:0,ymax:i},Ae=[],ze=[];R(z,$)&&Ae.push(u),R(z,J)&&ze.push(u),R(U,$)&&Ae.push(p),R(U,J)&&ze.push(p);for(let Oe=u+1;Oe<p;Oe++)Ae.push(Oe),ze.push(Oe);t.push({extent:z,frameIds:[u]},{extent:U,frameIds:[p]},{extent:$,frameIds:Ae},{extent:J,frameIds:ze})}else l>m||b?t.push({extent:{xmin:l,ymin:s,xmax:c,ymax:i},frameIds:[u]},{extent:{xmin:h,ymin:s,xmax:m,ymax:i},frameIds:[p]}):t.push({extent:{xmin:l,ymin:s,xmax:m,ymax:i},frameIds:[u]});return t}(o,e).map(s=>s.extent);return t.length<2?t[0]||o:t.length>2?(o.xmin=e.valid[0],o.xmax=e.valid[1],o):{rings:t.map(s=>[[s.xmin,s.ymin],[s.xmin,s.ymax],[s.xmax,s.ymax],[s.xmax,s.ymin],[s.xmin,s.ymin]])}}(c,s);else if((0,y.oU)(c)||(0,y.l9)(c)){const l=A;(0,V.$P)(l,c);const u={xmin:l[0],ymin:l[1],xmax:l[2],ymax:l[3]},m=(0,S.XZ)(u.xmin,n)*(2*r),p=0===m?c:function v(o,e){const t=(0,S.x3)(o);for(const s of t)for(const i of s)i[0]+=e;return o}(c,m);u.xmin+=m,u.xmax+=m,(0,Q.jQ)(u,a)&&u.xmax!==r||(0,Q.jQ)(u,d)&&u.xmin!==n?e=p:h=p}else h=c;return null!==e?(new P).cut(e,r):h}(s),r=(0,De.iV)(i,s.spatialReference,t.view.spatialReference);return(0,be.pW)(r),r})()}_onTileUpdate(o){const e=(0,te.C5)(this.view.spatialReference);if(o.added&&o.added.length>0)for(const t of o.added)this._addNewTile(t,e);if(o.removed&&o.removed.length>0)for(const t of o.removed)this._removeTile(t.key)}_addGraphic(o){var e=this;return(0,j.Z)(function*(){e._abortProcessingGraphic(o.uid),(0,D.k_)(e._controller.signal);const t=new AbortController;e._graphicIdToAbortController.set(o.uid,t);const s={signal:t.signal};try{yield e._addOrUpdateGraphic(o,s),(0,D.k_)(e._controller.signal),e._graphicIdToAbortController.delete(o.uid)}catch(i){if(e._graphicIdToAbortController.delete(o.uid),!(0,D.D_)(i))throw i}})()}_updateGraphic(o,e){(0,D.k_)(this._controller.signal);const t=this._projectAndNormalizeGeometry(o,e),s=this._getSymbolResources(o,e);return Promise.all([t,s]).then(([i,r])=>{(0,D.k_)(this._controller.signal),this._graphicStore.addOrModify(o,r,i)})}_addOrUpdateGraphic(o,e){(0,D.k_)(this._controller.signal);const t=this._projectAndNormalizeGeometry(o,e),s=this._getSymbolResources(o,e);return Promise.all([t,s]).then(([i,r])=>{(0,D.k_)(this._controller.signal),this._graphicsSet.has(o)&&this._graphicStore.addOrModify(o,r,i)})}_addTile(o){const e=this.view.featuresTilingScheme.getTileBounds((0,I.Ue)(),o),t=new dt(o,e[0],e[3]);return this._tiles.set(o,t),this.container.addChild(t),t}_addNewTile(o,e){var t=this;return(0,j.Z)(function*(){const s=t._addTile(o.key),i=t._graphicStore.queryTileData(t._templateStore,o);if(0===i.length)return;if(e){const n=Math.round((e.valid[1]-e.valid[0])/o.resolution);for(const a of i)a.geometry&&((0,y.wp)(a.geometry)||(0,y.aW)(a.geometry))&&t._wrapPoints(a,n)}const r=o.key;t._tileUpdateSet.add(o.key),t.notifyChange("updating");try{const n={type:"update",clear:!1,addOrUpdate:yield t._processGraphics(o,i),remove:[],end:!0,sort:!1};s.patch(n),t._tileUpdateSet.delete(r),t.notifyChange("updating")}catch(n){if(t._tileUpdateSet.delete(r),t.notifyChange("updating"),!(0,D.D_)(n))throw n}})()}_removeTile(o){if(!this._tiles.has(o))return;const e=this._tiles.get(o);this.container.removeChild(e),e.destroy(),this._tiles.delete(o)}_setFilterState(o,e){const t=this._displayIds.get(o),s=this._attributeStore.getHighlightFlag(o);this._attributeStore.setData(t,0,0,s|(e?me.Zd:0))}_getGraphicsData(o,e,t){const i=(0,te.C5)(this.view.spatialReference),r=this._graphicStore.getGraphicsData(o,e,t);if(i){const n=Math.round((i.valid[1]-i.valid[0])/e.resolution);for(const a of r)a.geometry&&((0,y.wp)(a.geometry)||(0,y.aW)(a.geometry))&&this._wrapPoints(a,n)}return r}_wrapPoints(o,e){const t=o.geometry;(0,y.aW)(t)?this._wrapMultipoint(t,e):this._wrapPoint(o,e)}_wrapMultipoint(o,e){const t=o.points,s=[];let i=0,r=0;for(const[n,a]of t){if(s.push([n+i,a]),i=0,e===C.I_){const d=5*C.y1;n+r<d?(s.push([e,0]),i=-e):n+r>C.I_-d&&(s.push([-e,0]),i=e)}else n+r<-C.y1?(s.push([e,0]),i=-e):n+r>C.I_+C.y1&&(s.push([-e,0]),i=e);r+=n}o.points=s}_wrapPoint(o,e){const t=o.geometry;if(e===C.I_){const s=5*C.y1;t.x<s?o.geometry={points:[[t.x,t.y],[e,0]]}:t.x>C.I_-s&&(o.geometry={points:[[t.x,t.y],[-e,0]]})}else t.x<-C.y1?o.geometry={points:[[t.x,t.y],[e,0]]}:t.x>C.I_+C.y1&&(o.geometry={points:[[t.x,t.y],[-e,0]]})}_processGraphics(o,e,t){if(!e||!e.length||!this._meshFactory)return null;const s=Me.from(e),i=this._meshFactory;return this._matcher.then(r=>i.analyzeGraphics(s,this.container.stage.resourceManager,r,null,null,t).then(()=>(this._attributeStore.sendUpdates(),this._processAnalyzedGraphics(o,s))))}_processAnalyzedGraphics(o,e){const t=this._meshFactory,s=e.getSize(),i=e.getCursor(),n=new xt._(o.key.id,{features:s,records:s,metrics:0},{fill:"default"},!1,!1),a=[];for(;i.next();){const l=i.readGraphic();l.insertAfter=-1===l.insertAfter?-1:this._displayIds.get(l.insertAfter),l.displayId=this._displayIds.get(l.attributes[this.uid]);const u=new oe(l.displayId);u.insertAfter=l.insertAfter,a.push(u),t.writeGraphic(n,i,o.level)}const h=n.serialize(o.tileInfoView.tileInfo.isWrappable);return 1!==h.length?new W:W.fromVertexData(h[0].message,a)}_abortProcessingGraphic(o){this._graphicIdToAbortController.has(o)&&this._graphicIdToAbortController.get(o).abort()}_getNullSymbol(o){const e=o.geometry;return(0,y.l9)(e)?ie.mW:(0,y.oU)(e)||(0,y.YX)(e)?ie.kD:ie.G}_flipUpdatingGraphics(){this._updatingGraphicsTimer&&clearTimeout(this._updatingGraphicsTimer),this._updatingGraphicsTimer=setTimeout(()=>{this._updatingGraphicsTimer=null,this.notifyChange("updating")},160),this.notifyChange("updating")}};(0,T._)([(0,O.Cb)({constructOnly:!0})],Y.prototype,"requestUpdateCallback",void 0),(0,T._)([(0,O.Cb)()],Y.prototype,"container",void 0),(0,T._)([(0,O.Cb)({constructOnly:!0})],Y.prototype,"graphics",void 0),(0,T._)([(0,O.Cb)()],Y.prototype,"updating",null),(0,T._)([(0,O.Cb)()],Y.prototype,"view",void 0),(0,T._)([(0,O.Cb)()],Y.prototype,"updateRequested",void 0),Y=(0,T._)([(0,ee.j)("esri.views.2d.layers.support.GraphicsView2D")],Y);const Vt=Y}}]);