"use strict";(self.webpackChunksite=self.webpackChunksite||[]).push([[7692],{60295:(yt,rt,G)=>{G.d(rt,{Z:()=>pt});var H,j=G(17626),W=(G(8314),G(26584)),ot=G(86162),at=G(58817),ht=G(63290),ft=G(62208),$=G(77712),ct=G(66656),ut=G(76898);const Q=ht.Z.getLogger("esri.layers.support.PixelBlock");let Z=H=class extends ot.wq{constructor(y){super(y),this.width=null,this.height=null,this.pixelType="f32",this.validPixelCount=null,this.mask=null,this.maskIsAlpha=!1,this.pixels=null,this.statistics=null}static createEmptyBand(y,g){return new(H.getPixelArrayConstructor(y))(g)}static getPixelArrayConstructor(y){let g;switch(y){case"u1":case"u2":case"u4":case"u8":g=Uint8Array;break;case"u16":g=Uint16Array;break;case"u32":case"u32":g=Uint32Array;break;case"s8":g=Int8Array;break;case"s16":g=Int16Array;break;case"s32":g=Int32Array;break;case"f32":case"c64":case"c128":case"unknown":g=Float32Array;break;case"f64":g=Float64Array}return g}castPixelType(y){if(!y)return"f32";let g=y.toLowerCase();return["u1","u2","u4"].indexOf(g)>-1?g="u8":-1===["unknown","u8","s8","u16","s16","u32","s32","f32","f64"].indexOf(g)&&(g="f32"),g}getPlaneCount(){return this.pixels&&this.pixels.length}addData(y){if(!y.pixels||y.pixels.length!==this.width*this.height)throw new W.Z("pixelblock:invalid-or-missing-pixels","add data requires valid pixels array that has same length defined by pixel block width * height");this.pixels||(this.pixels=[]),this.statistics||(this.statistics=[]),this.pixels.push(y.pixels),this.statistics.push(y.statistics||{minValue:null,maxValue:null})}getAsRGBA(){const y=new ArrayBuffer(this.width*this.height*4);switch(this.pixelType){case"s8":case"s16":case"u16":case"s32":case"u32":case"f32":case"f64":this._fillFromNon8Bit(y);break;default:this._fillFrom8Bit(y)}return new Uint8ClampedArray(y)}getAsRGBAFloat(){const y=new Float32Array(this.width*this.height*4);return this._fillFrom32Bit(y),y}updateStatistics(){this.statistics=this.pixels.map(T=>this._calculateBandStatistics(T,this.mask));const y=this.mask;let g=0;if(y)for(let T=0;T<y.length;T++)y[T]&&g++;else g=this.width*this.height;this.validPixelCount=g}clamp(y){if(!y||"f64"===y||"f32"===y)return;let g;switch(y){case"u8":g=[0,255];break;case"u16":g=[0,65535];break;case"u32":g=[0,4294967295];break;case"s8":g=[-128,127];break;case"s16":g=[-32768,32767];break;case"s32":g=[-2147483648,2147483647];break;default:g=[-34e38,34e38]}const[T,B]=g,P=this.pixels,M=this.width*this.height,_=P.length;let v,O,I;const N=[];for(let J=0;J<_;J++){I=H.createEmptyBand(y,M),v=P[J];for(let X=0;X<M;X++)O=v[X],I[X]=O>B?B:O<T?T:O;N.push(I)}this.pixels=N,this.pixelType=y}extractBands(y){if((0,ft.Wi)(y)||0===y.length||null==this.pixels||0===this.pixels.length)return this;const g=this.pixels.length,T=y.some(P=>P>=this.pixels.length),B=g===y.length&&!y.some((P,M)=>P!==M);return T||B?this:new H({pixelType:this.pixelType,width:this.width,height:this.height,mask:this.mask,validPixelCount:this.validPixelCount,maskIsAlpha:this.maskIsAlpha,pixels:y.map(P=>this.pixels[P]),statistics:this.statistics&&y.map(P=>this.statistics[P])})}clone(){const y=new H({width:this.width,height:this.height,pixelType:this.pixelType,maskIsAlpha:this.maskIsAlpha,validPixelCount:this.validPixelCount});let g;this.mask&&(y.mask=this.mask instanceof Uint8Array?new Uint8Array(this.mask):this.mask.slice(0));const T=H.getPixelArrayConstructor(this.pixelType);if(this.pixels&&this.pixels.length>0){y.pixels=[];const B=this.pixels[0].slice;for(g=0;g<this.pixels.length;g++)y.pixels[g]=B?this.pixels[g].slice(0,this.pixels[g].length):new T(this.pixels[g])}if(this.statistics)for(y.statistics=[],g=0;g<this.statistics.length;g++)y.statistics[g]=(0,at.d9)(this.statistics[g]);return y}_fillFrom8Bit(y){const{mask:g,maskIsAlpha:T,pixels:B}=this;if(!y||!B||!B.length)return void Q.error("getAsRGBA()","Unable to convert to RGBA. The input pixel block is empty.");let P,M,_,v;P=M=_=B[0],B.length>=3?(M=B[1],_=B[2]):2===B.length&&(M=B[1]);const O=new Uint32Array(y),I=this.width*this.height;if(P.length===I)if(g&&g.length===I)if(T)for(v=0;v<I;v++)g[v]&&(O[v]=g[v]<<24|_[v]<<16|M[v]<<8|P[v]);else for(v=0;v<I;v++)g[v]&&(O[v]=255<<24|_[v]<<16|M[v]<<8|P[v]);else for(v=0;v<I;v++)O[v]=255<<24|_[v]<<16|M[v]<<8|P[v];else Q.error("getAsRGBA()","Unable to convert to RGBA. The pixelblock is invalid.")}_fillFromNon8Bit(y){const{pixels:g,mask:T,statistics:B}=this;if(!y||!g||!g.length)return void Q.error("getAsRGBA()","Unable to convert to RGBA. The input pixel block is empty.");const P=this.pixelType;let M=1,_=0,v=1;if(B&&B.length>0)_=B.map(l=>l.minValue).reduce((l,e)=>Math.min(l,e)),v=B.map(l=>l.maxValue-l.minValue).reduce((l,e)=>Math.max(l,e)),M=255/v;else{let l=255;"s8"===P?(_=-128,l=127):"u16"===P?l=65535:"s16"===P?(_=-32768,l=32767):"u32"===P?l=4294967295:"s32"===P?(_=-2147483648,l=2147483647):"f32"===P?(_=-34e38,l=34e38):"f64"===P&&(_=-Number.MAX_VALUE,l=Number.MAX_VALUE),M=255/(l-_)}const O=new Uint32Array(y),I=this.width*this.height;let N,J,X,E,n;if(N=J=X=g[0],N.length!==I)return Q.error("getAsRGBA()","Unable to convert to RGBA. The pixelblock is invalid.");if(g.length>=2)if(J=g[1],g.length>=3&&(X=g[2]),T&&T.length===I)for(E=0;E<I;E++)T[E]&&(O[E]=255<<24|(X[E]-_)*M<<16|(J[E]-_)*M<<8|(N[E]-_)*M);else for(E=0;E<I;E++)O[E]=255<<24|(X[E]-_)*M<<16|(J[E]-_)*M<<8|(N[E]-_)*M;else if(T&&T.length===I)for(E=0;E<I;E++)n=(N[E]-_)*M,T[E]&&(O[E]=255<<24|n<<16|n<<8|n);else for(E=0;E<I;E++)n=(N[E]-_)*M,O[E]=255<<24|n<<16|n<<8|n}_fillFrom32Bit(y){const{pixels:g,mask:T}=this;if(!y||!g||!g.length)return Q.error("getAsRGBAFloat()","Unable to convert to RGBA. The input pixel block is empty.");let B,P,M,_;B=P=M=g[0],g.length>=3?(P=g[1],M=g[2]):2===g.length&&(P=g[1]);const v=this.width*this.height;if(B.length!==v)return Q.error("getAsRGBAFloat()","Unable to convert to RGBA. The pixelblock is invalid.");let O=0;if(T&&T.length===v)for(_=0;_<v;_++)y[O++]=B[_],y[O++]=P[_],y[O++]=M[_],y[O++]=1&T[_];else for(_=0;_<v;_++)y[O++]=B[_],y[O++]=P[_],y[O++]=M[_],y[O++]=1}_calculateBandStatistics(y,g){let T=1/0,B=-1/0;const P=y.length;let M,_=0;if(g)for(M=0;M<P;M++)g[M]&&(_=y[M],T=_<T?_:T,B=_>B?_:B);else for(M=0;M<P;M++)_=y[M],T=_<T?_:T,B=_>B?_:B;return{minValue:T,maxValue:B}}};(0,j._)([(0,$.Cb)({json:{write:!0}})],Z.prototype,"width",void 0),(0,j._)([(0,$.Cb)({json:{write:!0}})],Z.prototype,"height",void 0),(0,j._)([(0,$.Cb)({json:{write:!0}})],Z.prototype,"pixelType",void 0),(0,j._)([(0,ct.p)("pixelType")],Z.prototype,"castPixelType",null),(0,j._)([(0,$.Cb)({json:{write:!0}})],Z.prototype,"validPixelCount",void 0),(0,j._)([(0,$.Cb)({json:{write:!0}})],Z.prototype,"mask",void 0),(0,j._)([(0,$.Cb)({json:{write:!0}})],Z.prototype,"maskIsAlpha",void 0),(0,j._)([(0,$.Cb)({json:{write:!0}})],Z.prototype,"pixels",void 0),(0,j._)([(0,$.Cb)({json:{write:!0}})],Z.prototype,"statistics",void 0),Z=H=(0,j._)([(0,ut.j)("esri.layers.support.PixelBlock")],Z);const pt=Z},77692:(yt,rt,G)=>{G.d(rt,{Uk:()=>E,SJ:()=>ht,Pz:()=>at,oc:()=>H,hE:()=>ct,Oh:()=>$,Hv:()=>ft,qF:()=>ot,nk:()=>W,XV:()=>Z,us:()=>B,Kh:()=>g,zp:()=>pt,pW:()=>M,Vl:()=>X,dy:()=>Q});var j=G(62208),K=G(60295);function W(n){return(0,j.pC)(n)&&"esri.layers.support.PixelBlock"===n.declaredClass&&n.pixels&&n.pixels.length>0}function ot(n,l){if(null==l||!l.length||!W(n))return n;const e=n.pixels.length;return l&&l.some(r=>r>=e)||1===e&&1===l.length&&0===l[0]?n:e!==l.length||l.some((r,c)=>r!==c)?new K.Z({pixelType:n.pixelType,width:n.width,height:n.height,mask:n.mask,validPixelCount:n.validPixelCount,maskIsAlpha:n.maskIsAlpha,pixels:l.map(r=>n.pixels[r]),statistics:n.statistics&&l.map(r=>n.statistics[r])}):n}function at(n){if(!n)return;const l=n.colormap;if(!l||0===l.length)return;const e=l.sort((t,s)=>t[0]-s[0]);let r=0;e[0][0]<0&&(r=e[0][0]);const c=Math.max(256,e[e.length-1][0]-r+1),o=new Uint8Array(4*c),p=[];let u,i=0,a=0;const x=5===e[0].length;if(c>65536)return e.forEach(t=>{p[t[0]-r]=x?t.slice(1):t.slice(1).concat([255])}),{indexed2DColormap:p,offset:r,alphaSpecified:x};if(n.fillUnspecified)for(u=e[a],i=u[0]-r;i<c;i++)o[4*i]=u[1],o[4*i+1]=u[2],o[4*i+2]=u[3],o[4*i+3]=x?u[4]:255,i===u[0]-r&&(u=a===e.length-1?u:e[++a]);else for(i=0;i<e.length;i++)u=e[i],a=4*(u[0]-r),o[a]=u[1],o[a+1]=u[2],o[a+2]=u[3],o[a+3]=x?u[4]:255;return{indexedColormap:o,offset:r,alphaSpecified:x}}function ht(n,l){if(!W(n)||!l&&(l.indexedColormap||l.indexed2DColormap))return n;const e=n.clone(),r=e.pixels;let c=e.mask;const o=e.width*e.height;if(1!==r.length)return n;const{indexedColormap:p,indexed2DColormap:u,offset:i,alphaSpecified:a}=l,x=p.length-1;let t=0;const s=r[0],f=new Uint8Array(s.length),h=new Uint8Array(s.length),m=new Uint8Array(s.length);let k,d=0;if(p)if(c)for(t=0;t<o;t++)c[t]&&(d=4*(s[t]-i),d<i||d>x?c[t]=0:(f[t]=p[d],h[t]=p[d+1],m[t]=p[d+2],c[t]=p[d+3]));else{for(c=new Uint8Array(o),t=0;t<o;t++)d=4*(s[t]-i),d<i||d>x?c[t]=0:(f[t]=p[d],h[t]=p[d+1],m[t]=p[d+2],c[t]=p[d+3]);e.mask=c}else if(c)for(t=0;t<o;t++)c[t]&&(k=u[s[t]],f[t]=k[0],h[t]=k[1],m[t]=k[2],c[t]=k[3]);else{for(c=new Uint8Array(o),t=0;t<o;t++)k=u[s[t]],f[t]=k[0],h[t]=k[1],m[t]=k[2],c[t]=k[3];e.mask=c}return e.pixels=[f,h,m],e.statistics=null,e.pixelType="u8",e.maskIsAlpha=a,e}function ft(n){if(!W(n))return null;n.statistics||n.updateStatistics();const{pixels:l,mask:e,pixelType:r,statistics:c}=n,o=n.width*n.height,p=l.length;let u,i,a,x,t;const s=[],f=[];let h,m,k,d,w,A,U,C,R,b;const D=256;for(x=0;x<p;x++){if(h=new Uint32Array(D),k=l[x],"u8"===r)if(u=-.5,i=255.5,e)for(t=0;t<o;t++)e[t]&&h[k[t]]++;else for(t=0;t<o;t++)h[k[t]]++;else{if(u=c[x].minValue,i=c[x].maxValue,a=(i-u)/D,m=new Uint32Array(257),e)for(t=0;t<o;t++)e[t]&&m[Math.floor((k[t]-u)/a)]++;else for(t=0;t<o;t++)m[Math.floor((k[t]-u)/a)]++;for(t=0;t<255;t++)h[t]=m[t];h[255]=m[255]+m[256]}for(s.push({min:u,max:i,size:D,counts:h}),d=0,w=0,C=0,t=0;t<D;t++)d+=h[t],w+=t*h[t];for(R=w/d,t=0;t<D;t++)C+=h[t]*(t-R)**2;b=Math.sqrt(C/(d-1)),a=(i-u)/D,A=(R+.5)*a+u,U=b*a,f.push({min:u,max:i,avg:A,stddev:U})}return{statistics:f,histograms:s}}function $(n){const l=[];for(let e=0;e<n.length;e++){const{min:r,max:c,size:o,counts:p}=n[e];let u=0,i=0;for(let h=0;h<o;h++)u+=p[h],i+=h*p[h];const a=i/u;let x=0;for(let h=0;h<o;h++)x+=p[h]*(h-a)**2;const t=(c-r)/o,s=(a+.5)*t+r,f=Math.sqrt(x/(u-1))*t;l.push({min:r,max:c,avg:s,stddev:f})}return l}function ct(n){const{minCutOff:l,maxCutOff:e,gamma:r,pixelType:c}=n,o=n.outMin||0,p=n.outMax||255;if(-1===["u8","u16","s8","s16"].indexOf(c))return null;const u=l.length;let i,a,x=0;"s8"===c?x=-127:"s16"===c&&(x=-32767);let t=256;["u16","s16"].indexOf(c)>-1&&(t=65536);const s=[],f=[],h=p-o;for(i=0;i<u;i++)f[i]=e[i]-l[i],s[i]=h/(e[i]-l[i]);const m=r&&r.length>=u,k=[];if(m)for(i=0;i<u;i++)k[i]=r[i]>1?r[i]>2?6.5+(r[i]-2)**2.5:6.5+100*(2-r[i])**4:1;let d;const w=[];let A,U,C;if(m)for(i=0;i<u;i++){for(C=[],a=0;a<t;a++)A=a+x,d=(A-l[i])/f[i],U=1,r[i]>1&&(U-=(1/h)**(d*k[i])),C[a]=A<e[i]&&A>l[i]?Math.floor(U*h*d**(1/r[i]))+o:A>=e[i]?p:o;w[i]=C}else for(i=0;i<u;i++){for(C=[],a=0;a<t;a++)A=a+x,C[a]=A<=l[i]?o:A>=e[i]?p:Math.floor((A-l[i])/f[i]*h)+o;w[i]=C}if(null!=n.contrastOffset){const R=function ut(n,l){const e=Math.min(Math.max(n,-100),100),r=Math.min(Math.max(l,-100),100),c=255;let p,u;const i=new Uint8Array(256);for(p=0;p<256;p++)e>0&&e<100?u=(200*p-25500+510*r)/(2*(100-e))+128:e<=0&&e>-100?u=(200*p-25500+510*r)*(100+e)/2e4+128:100===e?(u=200*p-25500+256*(100-e)+510*r,u=u>0?c:0):-100===e&&(u=128),i[p]=u>c?c:u<0?0:u;return i}(n.contrastOffset,n.brightnessOffset);for(i=0;i<u;i++)for(C=w[i],a=0;a<t;a++)C[a]=R[C[a]]}return{lut:w,offset:x}}function H(n,l=256){l=Math.min(l,256);const{size:e,counts:r}=n,c=new Uint8Array(e),o=r.reduce((x,t)=>x+t/l,0);let p=0,u=0,i=0,a=o;for(let x=0;x<e;x++)if(i+=r[x],!(x<e-1&&i+r[x+1]<a)){for(;p<l-1&&a<i;)p++,a+=o;for(let t=u;t<=x;t++)c[t]=p;u=x+1}for(let x=u;x<e;x++)c[x]=l-1;return c}function Q(n,l){if(!W(n))return null;const e=n.clone(),{pixels:r,mask:c}=e,{minCutOff:o,maxCutOff:p,gamma:u}=l,i=l.outMin||0,a=l.outMax||255,x=e.width*e.height,t=r.length;let s,f,h,m,k;const d=a-i,w=[],A=[];for(s=0;s<t;s++)A[s]=p[s]-o[s],w[s]=d/(p[s]-o[s]);const U=u&&u.length>=t,C=[];if(U)for(s=0;s<t;s++)C[s]=u[s]>1?u[s]>2?6.5+(u[s]-2)**2.5:6.5+100*(2-u[s])**4:1;if(U)if(null!=c){for(f=0;f<x;f++)if(c[f])for(s=0;s<t;s++)h=r[s][f],k=(h-o[s])/A[s],m=1,u[s]>1&&(m-=(1/d)**(k*C[s])),r[s][f]=h<p[s]&&h>o[s]?Math.floor(m*d*k**(1/u[s]))+i:h>=p[s]?a:i}else for(f=0;f<x;f++)for(s=0;s<t;s++)h=r[s][f],k=(h-o[s])/A[s],m=1,u[s]>1&&(m-=(1/d)**(k*C[s])),r[s][f]=h<p[s]&&h>o[s]?Math.floor(m*d*k**(1/u[s]))+i:h>=p[s]?a:i;else if(null!=c){for(f=0;f<x;f++)if(c[f])for(s=0;s<t;s++)h=r[s][f],r[s][f]=h<p[s]&&h>o[s]?Math.floor((h-o[s])/A[s]*d)+i:h>=p[s]?a:i}else for(f=0;f<x;f++)for(s=0;s<t;s++)h=r[s][f],r[s][f]=h<p[s]&&h>o[s]?Math.floor((h-o[s])/A[s]*d)+i:h>=p[s]?a:i;return e.pixelType="u8",e.updateStatistics(),e}function Z(n,l){if(!W(n))return null;const{pixels:e,mask:r}=n,c=n.width*n.height,o=e.length;let p=l.lut;const{offset:u}=l;let i,a;p&&1===p[0].length&&(p=e.map(()=>p));const x=[];let t,s,f;if(u)if(null==r)for(i=0;i<o;i++){for(t=e[i],s=p[i],f=new Uint8Array(c),a=0;a<c;a++)f[a]=s[t[a]-u];x.push(f)}else for(i=0;i<o;i++){for(t=e[i],s=p[i],f=new Uint8Array(c),a=0;a<c;a++)r[a]&&(f[a]=s[t[a]-u]);x.push(f)}else if(null==r)for(i=0;i<o;i++){for(t=e[i],s=p[i],f=new Uint8Array(c),a=0;a<c;a++)f[a]=s[t[a]];x.push(f)}else for(i=0;i<o;i++){for(t=e[i],s=p[i],f=new Uint8Array(c),a=0;a<c;a++)r[a]&&(f[a]=s[t[a]]);x.push(f)}const h=new K.Z({width:n.width,height:n.height,pixels:x,mask:r,pixelType:"u8"});return h.updateStatistics(),h}function pt(n,l){if(!W(n))return null;const e=n.clone(),{pixels:r}=e,c=e.width*e.height,o=l.length,p=Math.floor(o/2),u=l[Math.floor(p)],i=r[0];let a,x,t,s,f,h,m=!1;const k=new Uint8Array(c),d=new Uint8Array(c),w=new Uint8Array(c);let A=e.mask;const U=4===l[0].mappedColor.length;for(A||(A=new Uint8Array(c),A.fill(U?255:1),e.mask=A),f=0;f<c;f++)if(A[f]){for(a=i[f],m=!1,h=p,x=u,t=0,s=o-1;s-t>1;){if(a===x.value){m=!0;break}a>x.value?t=h:s=h,h=Math.floor((t+s)/2),x=l[Math.floor(h)]}m||(a===l[t].value?(x=l[t],m=!0):a===l[s].value?(x=l[s],m=!0):a<l[t].value?(m=!1,x=null):a>l[t].value&&(a<l[s].value?(x=l[t],m=!0):s===o-1?(m=!1,x=null):(x=l[s],m=!0))),m?(k[f]=x.mappedColor[0],d[f]=x.mappedColor[1],w[f]=x.mappedColor[2],A[f]=x.mappedColor[3]):k[f]=d[f]=w[f]=A[f]=0}return e.pixels=[k,d,w],e.mask=A,e.pixelType="u8",e.maskIsAlpha=U,e}function g(n,l){if(!n||0===n.length)return null;const e=n.filter(h=>h.pixelBlock)[0];if(!e||(0,j.Wi)(e.pixelBlock))return null;const r=(e.extent.xmax-e.extent.xmin)/e.pixelBlock.width,c=(e.extent.ymax-e.extent.ymin)/e.pixelBlock.height,o=.01*Math.min(r,c),p=n.sort((h,m)=>Math.abs(h.extent.ymax-m.extent.ymax)>o?m.extent.ymax-h.extent.ymax:Math.abs(h.extent.xmin-m.extent.xmin)>o?h.extent.xmin-m.extent.xmin:0),u=Math.min.apply(null,p.map(h=>h.extent.xmin)),i=Math.min.apply(null,p.map(h=>h.extent.ymin)),a=Math.max.apply(null,p.map(h=>h.extent.xmax)),x=Math.max.apply(null,p.map(h=>h.extent.ymax)),t={x:Math.round((l.xmin-u)/r),y:Math.round((x-l.ymax)/c)},s={width:Math.round((a-u)/r),height:Math.round((x-i)/c)},f={width:Math.round((l.xmax-l.xmin)/r),height:Math.round((l.ymax-l.ymin)/c)};return Math.round(s.width/e.pixelBlock.width)*Math.round(s.height/e.pixelBlock.height)!==p.length||t.x<0||t.y<0||s.width<f.width||s.height<f.height?null:{extent:l,pixelBlock:B(p.map(h=>h.pixelBlock),s,{clipOffset:t,clipSize:f})}}function T(n,l,e,r,c,o){const{width:p,height:u}=e.block,{x:i,y:a}=e.offset,{width:x,height:t}=e.mosaic,s=function y(n,l,e,r,c,o,p,u){return{xmin:c<=e*n?0:c<e*n+n?c-e*n:n,ymin:o<=r*l?0:o<r*l+l?o-r*l:l,xmax:c+p<=e*n?0:c+p<e*n+n?c+p-e*n:n,ymax:o+u<=r*l?0:o+u<r*l+l?o+u-r*l:l}}(p,u,r,c,i,a,x,t);let f=0,h=0;if(o){const m=o.hasGCSSShiftTransform?360:o.halfWorldWidth,k=p*o.resolutionX,d=o.startX+r*k,w=d+k;d<m&&w>m?h=o.rightPadding:d>=m&&(f=o.leftMargin-o.rightPadding,h=0)}if(s.xmax-=h,"number"!=typeof l)for(let m=s.ymin;m<s.ymax;m++){const k=(c*u+m-a)*x+(r*p-i)+f,d=m*p;for(let w=s.xmin;w<s.xmax;w++)n[k+w]=l[d+w]}else for(let m=s.ymin;m<s.ymax;m++){const k=(c*u+m-a)*x+(r*p-i)+f;for(let d=s.xmin;d<s.xmax;d++)n[k+d]=l}}function B(n,l,e={}){const{clipOffset:r,clipSize:c,alignmentInfo:o,blockWidths:p}=e;if(p)return function P(n,l,e){const r=n.find(f=>(0,j.pC)(f));if(!(0,j.pC)(r))return null;const c=n.some(f=>!(0,j.pC)(f)||!!f.mask),{width:o,height:p}=l,u=c?new Uint8Array(o*p):null,{blockWidths:i}=e,a=[],x=r.getPlaneCount(),t=K.Z.getPixelArrayConstructor(r.pixelType);if(c)for(let f=0,h=0;f<n.length;h+=i[f],f++){const m=n[f];if(!W(m))continue;const k=m.mask;for(let d=0;d<p;d++)for(let w=0;w<i[f];w++)u[d*o+w+h]=null==k?255:k[d*m.width+w]}for(let f=0;f<x;f++){const h=new t(o*p);for(let m=0,k=0;m<n.length;k+=i[m],m++){const d=n[m];if(!W(d))continue;const w=d.pixels[f];if(null!=w)for(let A=0;A<p;A++)for(let U=0;U<i[m];U++)h[A*o+U+k]=w[A*d.width+U]}a.push(h)}const s=new K.Z({width:o,height:p,mask:u,pixels:a,pixelType:r.pixelType});return s.updateStatistics(),s}(n,l,{blockWidths:p});const u=n.filter(b=>W(b))[0];if((0,j.Wi)(u))return null;const i=c?c.width:l.width,a=c?c.height:l.height,x=u.width,t=u.height,s=l.width/x,f=l.height/t,h={offset:r||{x:0,y:0},mosaic:c||l,block:{width:x,height:t}},m=u.pixelType,k=K.Z.getPixelArrayConstructor(m),d=u.pixels.length,w=[];let A,U,C;for(let b=0;b<d;b++){U=new k(i*a);for(let D=0;D<f;D++)for(let V=0;V<s;V++){const z=n[D*s+V];W(z)&&(A=z.pixels[b],T(U,A,h,V,D,o))}w.push(U)}if(n.some(b=>(0,j.Wi)(b)||b.mask&&b.mask.length>0)){C=new Uint8Array(i*a);for(let b=0;b<f;b++)for(let D=0;D<s;D++){const V=n[b*s+D];T(C,((0,j.pC)(V)?V.mask:null)||(V?1:0),h,D,b,o)}}const R=new K.Z({width:i,height:a,pixels:w,pixelType:m,mask:C});return R.updateStatistics(),R}function M(n,l,e){if(!W(n))return null;const{width:r,height:c}=n,o=l.x,p=l.y,u=e.width+o,i=e.height+p;if(o<0||p<0||u>r||i>c||0===o&&0===p&&u===r&&i===c)return n;n.mask||(n.mask=new Uint8Array(r*c));const a=n.mask;for(let x=0;x<c;x++){const t=x*r;for(let s=0;s<r;s++)a[t+s]=x<p||x>=i||s<o||s>=u?0:1}return n.updateStatistics(),n}function v(n){if(0===n.size)return 0;let l=0,e=-1,r=0;const c=n.keys();let o=c.next();for(;!o.done;)r=n.get(o.value),r>l&&(e=o.value,l=r),o=c.next();return e}function O(n,l,e){if(0===e)return;const r=n.get(l);1===r?n.delete(l):n.set(l,r-1)}function I(n,l,e){0!==e&&n.set(l,n.has(l)?n.get(l)+1:1)}function N(n,l,e){let{x:r,y:c}=l;const{width:o,height:p}=e;if(0===r&&0===c&&p===n.height&&o===n.width)return n;const{width:u,height:i}=n,a=Math.max(0,c),x=Math.max(0,r),t=Math.min(r+o,u),s=Math.min(c+p,i);if(t<0||s<0||!W(n))return null;r=Math.max(0,-r),c=Math.max(0,-c);const{pixels:f,mask:h}=n,m=o*p,k=f.length,d=[];for(let U=0;U<k;U++){const C=f[U],R=K.Z.createEmptyBand(n.pixelType,m);for(let b=a;b<s;b++){const D=b*u;let V=(b+c-a)*o+r;for(let z=x;z<t;z++)R[V++]=C[D+z]}d.push(R)}const w=new Uint8Array(m);for(let U=a;U<s;U++){const C=U*u;let R=(U+c-a)*o+r;for(let b=x;b<t;b++)w[R++]=h?h[C+b]:1}const A=new K.Z({width:e.width,height:e.height,pixelType:n.pixelType,pixels:d,mask:w});return A.updateStatistics(),A}function J(n,l=!0){if(!W(n))return null;const{pixels:e,width:r,height:c,mask:o,pixelType:p}=n,u=[],i=Math.round(r/2),a=Math.round(c/2),x=c-1,t=r-1;for(let f=0;f<e.length;f++){const h=e[f],m=K.Z.createEmptyBand(p,i*a);let k=0;for(let d=0;d<c;d+=2)for(let w=0;w<r;w+=2){const A=h[d*r+w];if(l){const U=w===t?A:h[d*r+w+1],C=d===x?A:h[d*r+w+r];m[k++]=(A+U+C+(w===t?C:d===x?U:h[d*r+w+r+1]))/4}else m[k++]=A}u.push(m)}let s=null;if(o){s=new Uint8Array(i*a);let f=0;for(let h=0;h<c;h+=2)for(let m=0;m<r;m+=2){const k=o[h*r+m];if(l){const d=m===t?k:o[h*r+m+1],w=h===x?k:o[h*r+m+r];s[f++]=k*d*w*(m===t?w:h===x?d:o[h*r+m+r+1])?1:0}else s[f++]=k}}return new K.Z({width:i,height:a,pixelType:p,pixels:u,mask:s})}function X(n,l,e){if(!W(n))return null;const{width:r,height:c}=l;let{width:o,height:p}=n;const u=new Map,i={x:0,y:0},a=null==e?1:1+e;let x=n;for(let t=0;t<a;t++){const s=Math.ceil(o/r),f=Math.ceil(p/c);for(let h=0;h<f;h++){i.y=h*c;for(let m=0;m<s;m++){i.x=m*r;const k=N(x,i,l);u.set(`${t}/${h}/${m}`,k)}}t<a-1&&(x=J(x)),o=Math.round(o/2),p=Math.round(p/2)}return u}function E(n,l,e,r,c="nearest"){if(!W(n))return null;"majority"===c&&(n=function _(n){if(!W(n))return null;const l=n.clone(),{width:e,height:r,pixels:c,mask:o}=n,p=c[0],u=l.pixels[0];for(let i=2;i<r-1;i++){const a=new Map;for(let t=i-2;t<i+2;t++)for(let s=0;s<4;s++){const f=t*e+s;I(a,p[f],o?o[f]:1)}u[i*e]=v(a),u[i*e+1]=u[i*e+2]=u[i*e];let x=3;for(;x<e-1;x++){let t=(i-2)*e+x+1;I(a,p[t],o?o[t]:1),t=(i-1)*e+x+1,I(a,p[t],o?o[t]:1),t=i*e+x+1,I(a,p[t],o?o[t]:1),t=(i+1)*e+x+1,I(a,p[t],o?o[t]:1),t=(i-2)*e+x-3,O(a,p[t],o?o[t]:1),t=(i-1)*e+x-3,O(a,p[t],o?o[t]:1),t=i*e+x-3,O(a,p[t],o?o[t]:1),t=(i+1)*e+x-3,O(a,p[t],o?o[t]:1),u[i*e+x]=v(a)}u[i*e+x+1]=u[i*e+x]}for(let i=0;i<e;i++)u[i]=u[e+i]=u[2*e+i],u[(r-1)*e+i]=u[(r-2)*e+i];return l.updateStatistics(),l}(n));const{pixels:o,mask:p,pixelType:u}=n,i=n.width,a=n.height,x=K.Z.getPixelArrayConstructor(u),t=o.length,{width:s,height:f}=l,h=r.cols,m=r.rows,k=Math.ceil(s/h-.1/h),d=Math.ceil(f/m-.1/m);let w,A,U,C,R,b,D,V=!1;for(let S=0;S<e.length;S+=3)-1===e[S]&&-1===e[S+1]&&-1===e[S+2]&&(V=!0);const z=k*h,mt=z*d*m,st=new Float32Array(mt),nt=new Float32Array(mt);let q,tt,et=0;const lt="majority"===c?0:.5;for(let S=0;S<d;S++)for(let Y=0;Y<k;Y++){w=12*(S*k+Y),A=e[w],U=e[w+1],C=e[w+2],R=e[w+3],b=e[w+4],D=e[w+5];for(let L=0;L<m;L++){et=(S*m+L)*z+Y*h,tt=(L+.5)/m;for(let F=0;F<L;F++)q=(F+.5)/h,st[et+F]=Math.round((A*q+U*tt+C)*i-lt),nt[et+F]=Math.round((R*q+b*tt+D)*a-lt)}w+=6,A=e[w],U=e[w+1],C=e[w+2],R=e[w+3],b=e[w+4],D=e[w+5];for(let L=0;L<m;L++){et=(S*m+L)*z+Y*h,tt=(L+.5)/m;for(let F=L;F<h;F++)q=(F+.5)/h,st[et+F]=Math.round((A*q+U*tt+C)*i-lt),nt[et+F]=Math.round((R*q+b*tt+D)*a-lt)}}const dt=(S,Y)=>{for(let L=0;L<f;L++){w=L*z;for(let F=0;F<s;F++)S[L*s+F]=st[w]<0||nt[w]<0?0:Y[st[w]+nt[w]*i],w++}},gt=[];let xt;for(let S=0;S<t;S++)xt=new x(s*f),dt(xt,o[S]),gt.push(xt);const it=new K.Z({width:s,height:f,pixelType:u,pixels:gt});if(p)it.mask=new Uint8Array(s*f),dt(it.mask,p);else if(V){it.mask=new Uint8Array(s*f);for(let S=0;S<s*f;S++)it.mask[S]=st[S]<0||nt[S]<0?0:1}return it.updateStatistics(),it}}}]);